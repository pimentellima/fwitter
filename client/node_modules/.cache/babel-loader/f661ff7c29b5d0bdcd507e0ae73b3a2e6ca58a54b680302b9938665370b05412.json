{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\post\\\\post.js\",\n  _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport 'moment/locale/pt-br';\nimport { useNavigate } from 'react-router-dom';\nimport PostBody from '../../components/post/postBody';\nimport { request } from '../../utils/axios';\nimport Interactions from \"../interactions/interactions\";\nimport { useGetPostByIdQuery } from '../../hooks/useGetPostByIdQuery';\nimport { useGetUserByIdQuery } from './useGetUserByIdQuery';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = _ref => {\n  _s();\n  let {\n    post,\n    isThread\n  } = _ref;\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const {\n    id,\n    user_id,\n    ingredients,\n    description,\n    file,\n    parent_id,\n    date,\n    title,\n    share_user_id\n  } = post;\n  const {\n    data: user,\n    isFetching: isFetchingUser\n  } = useGetUserByIdQuery({\n    id: user_id\n  });\n  const {\n    data: shareUser\n  } = useGetUserByIdQuery({\n    id: share_user_id\n  });\n  const {\n    data: parentPost\n  } = useGetPostByIdQuery({\n    id: parent_id\n  });\n  const {\n    data: parentPostUser\n  } = useGetUserByIdQuery({\n    id: parentPost === null || parentPost === void 0 ? void 0 : parentPost.user_id\n  });\n  const deleteMutation = useMutation(() => request.delete('/single/', {\n    data: {\n      id\n    }\n  }), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['homePosts']);\n      queryClient.invalidateQueries(['profilePosts']);\n      queryClient.invalidateQueries(['bookmarkedPosts']);\n      if (parent_id) {\n        queryClient.invalidateQueries(['postComments']);\n      }\n    }\n  });\n  if (isFetchingUser) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => navigate('/post/' + id),\n    className: \"flex flex-col pt-2 pr-3 \\r hover:backdrop-brightness-110\\r hover:cursor-pointer\",\n    children: /*#__PURE__*/_jsxDEV(PostBody, {\n      title: title,\n      user: user,\n      date: date,\n      ingredients: ingredients,\n      description: description,\n      file: file,\n      shareUser: shareUser,\n      parentPostUser: parentPostUser,\n      isThread: isThread,\n      handleUserClick: (e, user) => {\n        e.stopPropagation();\n        navigate('/' + user.username);\n      },\n      handleRemove: e => {\n        e.stopPropagation();\n        deleteMutation.mutate();\n      },\n      children: /*#__PURE__*/_jsxDEV(Interactions, {\n        post: post,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"qpBsJ1MzgF3nz+zGt3YZXJsFdS8=\", false, function () {\n  return [useQueryClient, useNavigate, useGetUserByIdQuery, useGetUserByIdQuery, useGetPostByIdQuery, useGetUserByIdQuery, useMutation];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["useMutation","useQueryClient","useNavigate","PostBody","request","Interactions","useGetPostByIdQuery","useGetUserByIdQuery","Post","post","isThread","queryClient","navigate","id","user_id","ingredients","description","file","parent_id","date","title","share_user_id","data","user","isFetching","isFetchingUser","shareUser","parentPost","parentPostUser","deleteMutation","delete","onSuccess","invalidateQueries","e","stopPropagation","username","mutate"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/post.js"],"sourcesContent":["import { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport 'moment/locale/pt-br';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PostBody from '../../components/post/postBody';\r\nimport { request } from '../../utils/axios';\r\nimport Interactions from \"../interactions/interactions\";\r\nimport { useGetPostByIdQuery } from '../../hooks/useGetPostByIdQuery';\r\nimport { useGetUserByIdQuery } from './useGetUserByIdQuery';\r\n\r\nconst Post = ({ post, isThread }) => {\r\n    const queryClient = useQueryClient();\r\n    const navigate = useNavigate();\r\n\r\n    const { \r\n        id,\r\n        user_id, \r\n        ingredients,\r\n        description,\r\n        file,\r\n        parent_id,\r\n        date, \r\n        title, \r\n        share_user_id\r\n    } = post\r\n\r\n    const { \r\n        data: user, \r\n        isFetching: isFetchingUser \r\n    } = useGetUserByIdQuery({ id: user_id });\r\n    const { \r\n        data: shareUser \r\n    } = useGetUserByIdQuery({ id: share_user_id });\r\n    const { \r\n        data: parentPost \r\n    } = useGetPostByIdQuery({ id: parent_id });\r\n    const { \r\n        data: parentPostUser \r\n    } = useGetUserByIdQuery({ id: parentPost?.user_id });\r\n\r\n    const deleteMutation = useMutation(\r\n        () =>  request.delete('/single/', {\r\n            data: { id }\r\n        }), {\r\n            onSuccess: () => {\r\n                queryClient.invalidateQueries(['homePosts']);\r\n                queryClient.invalidateQueries(['profilePosts']);\r\n                queryClient.invalidateQueries(['bookmarkedPosts']);\r\n                if(parent_id) {\r\n                    queryClient.invalidateQueries(['postComments'])\r\n            }\r\n        }}\r\n    )\r\n\r\n    if(isFetchingUser) return <></>\r\n\r\n    return (\r\n        <div \r\n            onClick={() => navigate('/post/' + id)} \r\n            className='flex flex-col pt-2 pr-3 \r\n                hover:backdrop-brightness-110\r\n                hover:cursor-pointer'\r\n            >\r\n                <PostBody \r\n                    title={title}\r\n                    user={user}\r\n                    date={date}\r\n                    ingredients={ingredients}\r\n                    description={description}\r\n                    file={file}\r\n                    shareUser={shareUser}\r\n                    parentPostUser={parentPostUser}\r\n                    isThread={isThread}\r\n                    handleUserClick={(e, user) => {\r\n                        e.stopPropagation();\r\n                        navigate('/' + user.username)\r\n                    }}\r\n                    handleRemove={e => {\r\n                        e.stopPropagation();\r\n                        deleteMutation.mutate();\r\n                    }}\r\n                    >\r\n                    <Interactions post={post} user={user}/>\r\n                </PostBody>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport moment from \"moment\";\nimport { useState } from \"react\";\nimport { request } from \"../../utils/axios\";\nexport const useGetPostThread = id => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const fetchPost = id => request.get('/single', {\n    params: {\n      id\n    }\n  }).then(res => {\n    const post = res.data[0];\n    return {\n      ...post,\n      ingredients: JSON.parse(post.ingredients),\n      date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n    };\n  });\n  const fetchThread = async id => {\n    const posts = [];\n    let post = await fetchPost(id);\n    while (post.parent_id) {\n      let post = await fetchPost(post.parent_id);\n      posts.unshift(post);\n    }\n    setPosts(posts);\n  };\n  useEffect(() => {\n    fetchThread();\n  }, []);\n  return posts;\n};\n_s(useGetPostThread, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");","map":{"version":3,"names":["moment","useState","request","useGetPostThread","id","posts","setPosts","fetchPost","get","params","then","res","post","data","ingredients","JSON","parse","date","format","fetchThread","parent_id","unshift","useEffect"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/postPage/useGetThreadQuery.js"],"sourcesContent":["import moment from \"moment\";\r\nimport { useState } from \"react\";\r\nimport { request } from \"../../utils/axios\";\r\n\r\nexport const useGetPostThread = (id) => {\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const fetchPost = id => \r\n        request.get('/single', {\r\n            params: { id }\r\n            }).then(res => {\r\n                const post = res.data[0];\r\n                return {\r\n                    ...post, \r\n                    ingredients: JSON.parse(post.ingredients),\r\n                    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n                }\r\n            })\r\n\r\n    const fetchThread = async id => {\r\n        const posts = [];\r\n        let post = await fetchPost(id);\r\n        while(post.parent_id) {\r\n            let post = await fetchPost(post.parent_id);\r\n            posts.unshift(post);\r\n        }\r\n        setPosts(posts);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchThread();\r\n    }, [])\r\n\r\n    return posts;\r\n    \r\n}\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAK;EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMM,SAAS,GAAGH,EAAE,IAChBF,OAAO,CAACM,GAAG,CAAC,SAAS,EAAE;IACnBC,MAAM,EAAE;MAAEL;IAAG;EACb,CAAC,CAAC,CAACM,IAAI,CAACC,GAAG,IAAI;IACX,MAAMC,IAAI,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;IACxB,OAAO;MACH,GAAGD,IAAI;MACPE,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACE,WAAW,CAAC;MACzCG,IAAI,EAAEjB,MAAM,CAACY,IAAI,CAACK,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;IACxD,CAAC;EACL,CAAC,CAAC;EAEV,MAAMC,WAAW,GAAG,MAAMf,EAAE,IAAI;IAC5B,MAAMC,KAAK,GAAG,EAAE;IAChB,IAAIO,IAAI,GAAG,MAAML,SAAS,CAACH,EAAE,CAAC;IAC9B,OAAMQ,IAAI,CAACQ,SAAS,EAAE;MAClB,IAAIR,IAAI,GAAG,MAAML,SAAS,CAACK,IAAI,CAACQ,SAAS,CAAC;MAC1Cf,KAAK,CAACgB,OAAO,CAACT,IAAI,CAAC;IACvB;IACAN,QAAQ,CAACD,KAAK,CAAC;EACnB,CAAC;EAEDiB,SAAS,CAAC,MAAM;IACZH,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOd,KAAK;AAEhB,CAAC;AAAA,GA/BYF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
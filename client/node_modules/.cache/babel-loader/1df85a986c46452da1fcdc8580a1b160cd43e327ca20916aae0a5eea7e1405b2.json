{"ast":null,"code":"import moment from \"moment\";\nimport { request } from \"../utils/axios\";\nexport const getUserPostsById = async id => {\n  const res = await request.get('/posts/' + id);\n  return res.data;\n};\nexport const getPostsById = async id => request.get('/posts/', {\n  params: {\n    id\n  }\n}).then(res => res.data.map(post => ({\n  ...post,\n  ingredients: JSON.parse(post.ingredients),\n  date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n})));\nexport const getPostById = async id => request.get('/single', {\n  params: {\n    id\n  }\n}).then(res => {\n  const post = res.data[0];\n  return {\n    ...res.data[0],\n    ingredients: JSON.parse(res.data[0].ingredients),\n    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n  };\n});\nexport const uploadImg = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await request.post('/upload/post/', formData);\n  return res.data;\n};\nexport const getComments = async post_id => {\n  const res = await request.get('/comments', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const createPost = async (data, user_id) => {\n  const {\n    title,\n    description,\n    ingredients,\n    file\n  } = data;\n  const fileUrl = file[0] ? await uploadImg(file[0]) : '';\n  const postObj = {\n    user_id,\n    title,\n    description,\n    ingredients: JSON.stringify(ingredients),\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n    file: fileUrl\n  };\n  return await request.post('/single/', postObj);\n};\nexport const deletePost = async id => await request.delete('/single/', {\n  data: {\n    id\n  }\n});\nexport const getLikes = async post_id => {\n  const res = await request.get('/likes', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const createLike = async _ref => {\n  let {\n    post_id,\n    user_id\n  } = _ref;\n  return await request.post('/likes', {\n    post_id,\n    user_id\n  });\n};\nexport const deleteLike = async _ref2 => {\n  let {\n    post_id,\n    user_id\n  } = _ref2;\n  return await request.delete('/likes', {\n    data: {\n      post_id,\n      user_id\n    }\n  });\n};","map":{"version":3,"names":["moment","request","getUserPostsById","id","res","get","data","getPostsById","params","then","map","post","ingredients","JSON","parse","date","format","getPostById","uploadImg","file","formData","FormData","append","getComments","post_id","createPost","user_id","title","description","fileUrl","postObj","stringify","deletePost","delete","getLikes","createLike","deleteLike"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/services/postsService.js"],"sourcesContent":["import moment from \"moment\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport const getUserPostsById = async(id) => {\r\n    const res = await request.get('/posts/' + id);\r\n    return res.data;\r\n}\r\n\r\nexport const getPostsById = async(id) => \r\n    request.get('/posts/', {\r\n        params: { id }\r\n    }).then(res => res.data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n    })\r\n))\r\n\r\nexport const getPostById = async id => \r\n    request.get('/single', {\r\n        params: { id }\r\n    }).then(res => {\r\n        const post = res.data[0];\r\n        return {\r\n            ...res.data[0], \r\n            ingredients: JSON.parse(res.data[0].ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n        }\r\n    })\r\n    \r\n\r\nexport const uploadImg = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await request.post('/upload/post/', formData);\r\n    return res.data;\r\n}\r\n\r\nexport const getComments = async (post_id) => {\r\n    const res = await request.get('/comments', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;        \r\n}\r\n\r\nexport const createPost = async (data, user_id) => {\r\n    const { title, description, ingredients, file } = data;\r\n    const fileUrl = file[0] ? await uploadImg(file[0]) : '';\r\n    const postObj = {\r\n        user_id,\r\n        title,\r\n        description,\r\n        ingredients: JSON.stringify(ingredients),\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        file: fileUrl\r\n    }\r\n    return await request.post('/single/', postObj);\r\n}\r\n\r\nexport const deletePost = async id => \r\n    await request.delete('/single/', {\r\n            data: { id }\r\n        })\r\n\r\nexport const getLikes = async (post_id) => {\r\n    const res = await request.get('/likes', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const createLike = async ({ post_id, user_id }) => \r\n    await request.post('/likes', {\r\n        post_id,\r\n        user_id\r\n    })\r\n\r\nexport const deleteLike = async ({ post_id, user_id }) => \r\n    await request.delete('/likes', {\r\n        data: {\r\n            post_id,\r\n            user_id\r\n    }})\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
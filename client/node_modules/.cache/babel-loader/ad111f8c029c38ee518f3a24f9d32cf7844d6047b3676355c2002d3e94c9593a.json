{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$();\nimport axios from 'axios';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport moment from 'moment';\nconst url = 'http://localhost:5000';\nexport const useUser = id => {\n  _s();\n  return useQuery(['postUser'], async () => {\n    const res = await axios.get(url + '/user/', {\n      params: {\n        id\n      }\n    });\n    return res.data[0];\n  });\n};\n_s(useUser, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useLikes = id => {\n  _s2();\n  return useQuery(['postLikes'], {\n    post_id: id\n  }, async () => {\n    const res = await axios.get(url + '/likes', {\n      params: {\n        post_id: id\n      }\n    });\n    return res.data;\n  });\n};\n_s2(useLikes, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useComments = id => {\n  _s3();\n  return useQuery(['postComments'], {\n    post_id: id\n  }, async () => {\n    const res = await axios.get(url + '/comments', {\n      params: {\n        post_id: id\n      }\n    });\n    return res.data;\n  });\n};\n_s3(useComments, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useDeletePost = () => {\n  _s4();\n  const queryClient = useQueryClient();\n  return useMutation(async id => await axios.delete(url + '/posts', {\n    data: {\n      id\n    }\n  }), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['posts']);\n      queryClient.invalidateQueries(['profilePosts']);\n    }\n  });\n};\n_s4(useDeletePost, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useCreateLike = _ref => {\n  _s5();\n  let {\n    post_id,\n    user_id\n  } = _ref;\n  const queryClient = useQueryClient();\n  return useMutation(async () => await axios.post(url + '/likes', {\n    post_id,\n    user_id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id\n    }])\n  });\n};\n_s5(useCreateLike, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useDeleteLike = _ref2 => {\n  _s6();\n  let {\n    post_id,\n    user_id\n  } = _ref2;\n  const queryClient = useQueryClient();\n  return useMutation(async () => await axios.delete(url + '/likes', {\n    data: {\n      post_id,\n      user_id\n    }\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id\n    }])\n  });\n};\n_s6(useDeleteLike, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const uploadImg = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await axios.post(url + '/upload/post/', formData);\n  return res.data;\n};\nexport const useCreatePost = async _ref3 => {\n  _s7();\n  let {\n    user_id\n  } = _ref3;\n  const queryClient = useQueryClient();\n  return useMutation(async data => {\n    const {\n      title,\n      description,\n      ingredients,\n      file\n    } = data;\n    const fileUrl = file[0] ? await uploadImg(file[0]) : '';\n    const postObj = {\n      user_id,\n      title,\n      description,\n      ingredients: JSON.stringify(ingredients),\n      date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      file: fileUrl\n    };\n    return await axios.post(url + '/posts/', postObj);\n  }, {\n    onSuccess: () => queryClient.invalidateQueries(['posts'])\n  });\n};\n_s7(useCreatePost, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["axios","useMutation","useQuery","useQueryClient","moment","url","useUser","id","res","get","params","data","useLikes","post_id","useComments","useDeletePost","queryClient","delete","onSuccess","invalidateQueries","useCreateLike","user_id","post","useDeleteLike","uploadImg","file","formData","FormData","append","useCreatePost","title","description","ingredients","fileUrl","postObj","JSON","stringify","date","format"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/queries.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport moment from 'moment';\r\n\r\nconst url = 'http://localhost:5000';\r\n\r\nexport const useUser = (id) => {\r\n    return useQuery(['postUser'], async () => {\r\n        const res = await axios.get(url + '/user/', {\r\n            params:{ id }\r\n        })\r\n        return res.data[0];\r\n    })\r\n}\r\n\r\nexport const useLikes = (id) => {\r\n    return useQuery(['postLikes'], { post_id: id }, async () => {\r\n        const res = await axios.get(url + '/likes', {\r\n            params: {\r\n                post_id: id\r\n            }\r\n        });\r\n        return res.data;    \r\n    })\r\n}\r\n\r\nexport const useComments = (id) => {\r\n    return useQuery(['postComments'], { post_id: id }, async () => {\r\n        const res = await axios.get(url + '/comments', {\r\n            params: {\r\n                post_id: id\r\n            }\r\n        }) \r\n        return res.data;\r\n    })\r\n}\r\n\r\nexport const useDeletePost = () => {\r\n    const queryClient = useQueryClient();\r\n    return useMutation(async (id) => \r\n        await axios.delete(url + '/posts', {\r\n            data: { id }\r\n        }), {\r\n            onSuccess: () => {\r\n                queryClient.invalidateQueries(['posts']);\r\n                queryClient.invalidateQueries(['profilePosts']);\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport const useCreateLike = ({ post_id, user_id }) => {\r\n    const queryClient = useQueryClient();\r\n    return useMutation(async () => \r\n        await axios.post(url + '/likes', {\r\n            post_id,\r\n            user_id\r\n        }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postLike', { post_id }])\r\n        }\r\n    )\r\n}\r\n\r\nexport const useDeleteLike = ({ post_id, user_id }) => {\r\n    const queryClient = useQueryClient();\r\n    return useMutation(async () => \r\n        await axios.delete(url + '/likes', {\r\n            data: {\r\n                post_id,\r\n                user_id\r\n        }}), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postLike', { post_id }])\r\n        }\r\n    )\r\n}\r\n\r\nexport const uploadImg = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await axios.post(url + '/upload/post/', formData);\r\n    return res.data;\r\n}\r\n\r\nexport const useCreatePost = async ({ user_id }) => {\r\n    const queryClient = useQueryClient();\r\n    return useMutation(async data => {\r\n        const { title, description, ingredients, file } = data;\r\n        const fileUrl = file[0] ? await uploadImg(file[0]) : '';\r\n        const postObj = {\r\n            user_id,\r\n            title,\r\n            description,\r\n            ingredients: JSON.stringify(ingredients),\r\n            date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n            file: fileUrl\r\n        }\r\n        return await axios.post(url + '/posts/', postObj);\r\n    }, {\r\n        onSuccess: () => queryClient.invalidateQueries(['posts'])\r\n    })\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
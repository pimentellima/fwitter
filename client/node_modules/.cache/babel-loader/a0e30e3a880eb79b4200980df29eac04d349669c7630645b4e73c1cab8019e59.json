{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\post\\\\postController.js\",\n  _s = $RefreshSig$();\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport 'moment/locale/pt-br';\nimport { useContext } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport PostBody from '../../components/postBody';\nimport { AuthContext } from '../../contexts/authContext';\nimport { deletePost, getPostById } from '../../services/singleService';\nimport { getUserById } from '../../services/userService';\nimport PostActionsController from \"./postActionsController\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostController = _ref => {\n  _s();\n  let {\n    post,\n    type\n  } = _ref;\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const {\n    id,\n    user_id,\n    parent_id,\n    date,\n    title,\n    share_user_id\n  } = post;\n  const {\n    data: user,\n    isFetching: isFetchingUser\n  } = useQuery(['user', {\n    post_id: id\n  }], () => getUserById(user_id));\n  const {\n    data: parentUser\n  } = useQuery(['postResponseUser', {\n    post_id: id\n  }], () => getPostById(parent_id).then(post => getUserById(post.user_id)), {\n    enabled: !!parent_id\n  });\n  const {\n    data: shareUser\n  } = useQuery(['postShareUser', {\n    post_id: id\n  }], () => getUserById(share_user_id), {\n    enabled: !!share_user_id\n  });\n  const deleteMutation = useMutation(() => deletePost(id), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['homePosts']);\n      queryClient.invalidateQueries(['profilePosts']);\n      queryClient.invalidateQueries(['bookmarkedPosts']);\n      queryClient.invalidateQueries(['postComments', {\n        parent_id\n      }]);\n    }\n  });\n  if (isFetchingUser) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => navigate('/post/' + id),\n    className: \"flex flex-col pt-2 pr-3 \\r hover:backdrop-brightness-110\\r hover:cursor-pointer\",\n    children: [/*#__PURE__*/_jsxDEV(PostBody, {\n      title: title,\n      date: date,\n      ingredients: ingredients,\n      description: description,\n      file: file,\n      shareUser: shareUser,\n      parentUser: parentUser,\n      handleUserClick: (e, user) => {\n        e.stopPropagation();\n        navigate('/' + user.username);\n      },\n      handleRemove: e => {\n        e.stopPropagation();\n        deleteMutation.mutate();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PostActionsController, {\n      post: post,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(PostController, \"PI0DuYVqgmcMfZr4RoOBtiYifR4=\", false, function () {\n  return [useQueryClient, useNavigate, useQuery, useQuery, useQuery, useMutation];\n});\n_c = PostController;\nexport default PostController;\nvar _c;\n$RefreshReg$(_c, \"PostController\");","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","useContext","useNavigate","PostBody","AuthContext","deletePost","getPostById","getUserById","PostActionsController","PostController","post","type","queryClient","navigate","id","user_id","parent_id","date","title","share_user_id","data","user","isFetching","isFetchingUser","post_id","parentUser","then","enabled","shareUser","deleteMutation","onSuccess","invalidateQueries","ingredients","description","file","e","stopPropagation","username","mutate"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/postController.js"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\nimport 'moment/locale/pt-br';\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PostBody from '../../components/postBody';\r\nimport { AuthContext } from '../../contexts/authContext';\r\nimport { deletePost, getPostById } from '../../services/singleService';\r\nimport { getUserById } from '../../services/userService';\r\nimport PostActionsController from \"./postActionsController\";\r\n\r\nconst PostController = ({ post, type }) => {\r\n    const queryClient = useQueryClient();\r\n    const navigate = useNavigate();\r\n\r\n    const { \r\n        id,\r\n        user_id, \r\n        parent_id,\r\n        date, \r\n        title, \r\n        share_user_id\r\n    } = post;\r\n\r\n    const { data: user, isFetching: isFetchingUser } = useQuery(\r\n        ['user', { post_id: id }], () => getUserById(user_id)\r\n    );\r\n\r\n    const { data: parentUser} = useQuery(\r\n        ['postResponseUser', { post_id: id }], () => \r\n        getPostById(parent_id).then(post => \r\n            getUserById(post.user_id)), \r\n        {\r\n            enabled: !!parent_id\r\n        }\r\n    )\r\n\r\n    const { data: shareUser } = useQuery(\r\n        ['postShareUser', { post_id: id }], () => getUserById(share_user_id),{\r\n            enabled: !!share_user_id\r\n        }\r\n    );\r\n\r\n    const deleteMutation = useMutation(\r\n        () => deletePost(id), {\r\n            onSuccess: () => {\r\n                queryClient.invalidateQueries(['homePosts']);\r\n                queryClient.invalidateQueries(['profilePosts']);\r\n                queryClient.invalidateQueries(['bookmarkedPosts']);\r\n                queryClient.invalidateQueries(['postComments', { parent_id }]);\r\n            }\r\n        }\r\n    )\r\n\r\n    if(isFetchingUser) return <></>\r\n\r\n    return (\r\n        <div \r\n            onClick={() => navigate('/post/' + id)} \r\n            className='flex flex-col pt-2 pr-3 \r\n                hover:backdrop-brightness-110\r\n                hover:cursor-pointer'\r\n            >\r\n                <PostBody \r\n                    title={title}\r\n                    date={date}\r\n                    ingredients={ingredients}\r\n                    description={description}\r\n                    file={file}\r\n                    shareUser={shareUser}\r\n                    parentUser={parentUser}\r\n                    handleUserClick={(e, user) => {\r\n                        e.stopPropagation();\r\n                        navigate('/' + user.username)\r\n                    }}\r\n                    handleRemove={e => {\r\n                        e.stopPropagation();\r\n                        deleteMutation.mutate();\r\n                    }}\r\n                    />\r\n                <PostActionsController post={post} user={user}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostController;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,uBAAuB;AAC7E,OAAO,qBAAqB;AAC5B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,UAAU,EAAEC,WAAW,QAAQ,8BAA8B;AACtE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC;AAAA;AAE5D,MAAMC,cAAc,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAAEC,IAAI;IAAEC;EAAK,CAAC;EAClC,MAAMC,WAAW,GAAGZ,cAAc,EAAE;EACpC,MAAMa,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAM;IACFY,EAAE;IACFC,OAAO;IACPC,SAAS;IACTC,IAAI;IACJC,KAAK;IACLC;EACJ,CAAC,GAAGT,IAAI;EAER,MAAM;IAAEU,IAAI,EAAEC,IAAI;IAAEC,UAAU,EAAEC;EAAe,CAAC,GAAGxB,QAAQ,CACvD,CAAC,MAAM,EAAE;IAAEyB,OAAO,EAAEV;EAAG,CAAC,CAAC,EAAE,MAAMP,WAAW,CAACQ,OAAO,CAAC,CACxD;EAED,MAAM;IAAEK,IAAI,EAAEK;EAAU,CAAC,GAAG1B,QAAQ,CAChC,CAAC,kBAAkB,EAAE;IAAEyB,OAAO,EAAEV;EAAG,CAAC,CAAC,EAAE,MACvCR,WAAW,CAACU,SAAS,CAAC,CAACU,IAAI,CAAChB,IAAI,IAC5BH,WAAW,CAACG,IAAI,CAACK,OAAO,CAAC,CAAC,EAC9B;IACIY,OAAO,EAAE,CAAC,CAACX;EACf,CAAC,CACJ;EAED,MAAM;IAAEI,IAAI,EAAEQ;EAAU,CAAC,GAAG7B,QAAQ,CAChC,CAAC,eAAe,EAAE;IAAEyB,OAAO,EAAEV;EAAG,CAAC,CAAC,EAAE,MAAMP,WAAW,CAACY,aAAa,CAAC,EAAC;IACjEQ,OAAO,EAAE,CAAC,CAACR;EACf,CAAC,CACJ;EAED,MAAMU,cAAc,GAAG/B,WAAW,CAC9B,MAAMO,UAAU,CAACS,EAAE,CAAC,EAAE;IAClBgB,SAAS,EAAE,MAAM;MACblB,WAAW,CAACmB,iBAAiB,CAAC,CAAC,WAAW,CAAC,CAAC;MAC5CnB,WAAW,CAACmB,iBAAiB,CAAC,CAAC,cAAc,CAAC,CAAC;MAC/CnB,WAAW,CAACmB,iBAAiB,CAAC,CAAC,iBAAiB,CAAC,CAAC;MAClDnB,WAAW,CAACmB,iBAAiB,CAAC,CAAC,cAAc,EAAE;QAAEf;MAAU,CAAC,CAAC,CAAC;IAClE;EACJ,CAAC,CACJ;EAED,IAAGO,cAAc,EAAE,oBAAO,qCAAK;EAE/B,oBACI;IACI,OAAO,EAAE,MAAMV,QAAQ,CAAC,QAAQ,GAAGC,EAAE,CAAE;IACvC,SAAS,EAAC,iFAEe;IAAA,wBAErB,QAAC,QAAQ;MACL,KAAK,EAAEI,KAAM;MACb,IAAI,EAAED,IAAK;MACX,WAAW,EAAEe,WAAY;MACzB,WAAW,EAAEC,WAAY;MACzB,IAAI,EAAEC,IAAK;MACX,SAAS,EAAEN,SAAU;MACrB,UAAU,EAAEH,UAAW;MACvB,eAAe,EAAE,CAACU,CAAC,EAAEd,IAAI,KAAK;QAC1Bc,CAAC,CAACC,eAAe,EAAE;QACnBvB,QAAQ,CAAC,GAAG,GAAGQ,IAAI,CAACgB,QAAQ,CAAC;MACjC,CAAE;MACF,YAAY,EAAEF,CAAC,IAAI;QACfA,CAAC,CAACC,eAAe,EAAE;QACnBP,cAAc,CAACS,MAAM,EAAE;MAC3B;IAAE;MAAA;MAAA;MAAA;IAAA,QACA,eACN,QAAC,qBAAqB;MAAC,IAAI,EAAE5B,IAAK;MAAC,IAAI,EAAEW;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEd,CAAC;AAAA,GAxEKZ,cAAc;EAAA,QACIT,cAAc,EACjBE,WAAW,EAWuBH,QAAQ,EAI/BA,QAAQ,EASRA,QAAQ,EAMbD,WAAW;AAAA;AAAA,KAhChCW,cAAc;AA0EpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
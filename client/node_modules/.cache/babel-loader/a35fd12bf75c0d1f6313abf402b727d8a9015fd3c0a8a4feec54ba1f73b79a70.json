{"ast":null,"code":"var _s = $RefreshSig$();\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { request } from \"../../utils/axios\";\nexport const useGetPostThread = id => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [isFetching, setIsFetching] = useState(true);\n  const fetchPost = async id => request.get('/single', {\n    params: {\n      id\n    }\n  }).then(res => {\n    const post = res.data[0];\n    return {\n      ...post,\n      ingredients: JSON.parse(post.ingredients),\n      date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n    };\n  });\n  useEffect(() => {\n    const postsArr = [];\n    let post = fetchPost(id);\n    while (post.parent_id) {\n      post = fetchPost(post.parent_id);\n      postsArr.unshift(post);\n    }\n    setPosts(postsArr);\n  }, []);\n  return posts;\n};\n\n/* export const fetchPostThread = async id => {\r\n    const postsArr = [];\r\n    let post = await fetchPost(id);\r\n    while(post.parent_id) {\r\n        post = await fetchPost(post.parent_id);\r\n        postsArr.unshift(post);\r\n    }\r\n    return postsArr;\r\n} */\n_s(useGetPostThread, \"CD9bATWQRzYGfYc0+y2uesolqN0=\");","map":{"version":3,"names":["moment","useEffect","useState","request","useGetPostThread","id","posts","setPosts","isFetching","setIsFetching","fetchPost","get","params","then","res","post","data","ingredients","JSON","parse","date","format","postsArr","parent_id","unshift"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/postPage/fetchPostThread.js"],"sourcesContent":["import moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { request } from \"../../utils/axios\";\r\n\r\nexport const useGetPostThread = (id) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [isFetching, setIsFetching] = useState(true);\r\n\r\n    const fetchPost = async id => \r\n        request.get('/single', {\r\n            params: { id }\r\n            }).then(res => {\r\n                const post = res.data[0];\r\n                return {\r\n                    ...post, \r\n                    ingredients: JSON.parse(post.ingredients),\r\n                    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n                }\r\n            })\r\n\r\n    useEffect(() => {\r\n        const postsArr = [];\r\n        let post = fetchPost(id);\r\n        while(post.parent_id) {\r\n            post = fetchPost(post.parent_id);\r\n            postsArr.unshift(post);\r\n        }\r\n        setPosts(postsArr);\r\n    }, [])\r\n\r\n    return posts\r\n\r\n}\r\n\r\n\r\n/* export const fetchPostThread = async id => {\r\n    const postsArr = [];\r\n    let post = await fetchPost(id);\r\n    while(post.parent_id) {\r\n        post = await fetchPost(post.parent_id);\r\n        postsArr.unshift(post);\r\n    }\r\n    return postsArr;\r\n} */\r\n\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAK;EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMQ,SAAS,GAAG,MAAML,EAAE,IACtBF,OAAO,CAACQ,GAAG,CAAC,SAAS,EAAE;IACnBC,MAAM,EAAE;MAAEP;IAAG;EACb,CAAC,CAAC,CAACQ,IAAI,CAACC,GAAG,IAAI;IACX,MAAMC,IAAI,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;IACxB,OAAO;MACH,GAAGD,IAAI;MACPE,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACE,WAAW,CAAC;MACzCG,IAAI,EAAEpB,MAAM,CAACe,IAAI,CAACK,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;IACxD,CAAC;EACL,CAAC,CAAC;EAEVpB,SAAS,CAAC,MAAM;IACZ,MAAMqB,QAAQ,GAAG,EAAE;IACnB,IAAIP,IAAI,GAAGL,SAAS,CAACL,EAAE,CAAC;IACxB,OAAMU,IAAI,CAACQ,SAAS,EAAE;MAClBR,IAAI,GAAGL,SAAS,CAACK,IAAI,CAACQ,SAAS,CAAC;MAChCD,QAAQ,CAACE,OAAO,CAACT,IAAI,CAAC;IAC1B;IACAR,QAAQ,CAACe,QAAQ,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOhB,KAAK;AAEhB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,GA/BaF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
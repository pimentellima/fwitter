{"ast":null,"code":"import axios from \"axios\";\nconst uploadProfileImg = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await axios.post('//localhost:5000/upload/userProfile', formData);\n  return res.data;\n};\nconst uploadBackgroundImg = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await axios.post('//localhost:5000/upload/userBackground', formData);\n  return res.data;\n};\nexport const updateUser = async _ref => {\n  let {\n    data,\n    currentUser\n  } = _ref;\n  const {\n    name,\n    bio,\n    profile_img,\n    profile_bg_img\n  } = data;\n  const profileImageUrl = profile_img[0] ? await uploadProfileImg(profile_img[0]) : currentUser.profile_img;\n  const backgroundImageUrl = profile_bg_img[0] ? await uploadBackgroundImg(profile_bg_img[0]) : currentUser.profile_bg_img;\n  const userData = {\n    name,\n    username: currentUser.username,\n    bio,\n    id: currentUser.id,\n    profile_img: profileImageUrl,\n    profile_bg_img: backgroundImageUrl\n  };\n  await axios.post('//localhost:5000/user', userData);\n  return userData;\n};\nexport const getFollowedById = async id => {\n  const res = await axios.get('//localhost:5000/follow', {\n    params: {\n      followed_user_id: id\n    }\n  });\n  return res.data;\n};\nexport const deleteFollow = async _ref2 => {\n  let {\n    followerId,\n    followedId\n  } = _ref2;\n  return await axios.delete('//localhost:5000/follow', {\n    data: {\n      follower_user_id: followerId,\n      followed_user_id: followedId\n    }\n  });\n};\nexport const createFollow = async _ref3 => {\n  let {\n    followerId,\n    followedId\n  } = _ref3;\n  return await axios.post('//localhost:5000/follow', {\n    follower_user_id: followerId,\n    followed_user_id: followedId\n  });\n};","map":{"version":3,"names":["axios","uploadProfileImg","file","formData","FormData","append","res","post","data","uploadBackgroundImg","updateUser","currentUser","name","bio","profile_img","profile_bg_img","profileImageUrl","backgroundImageUrl","userData","username","id","getFollowedById","get","params","followed_user_id","deleteFollow","followerId","followedId","delete","follower_user_id","createFollow"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/profile/profileService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst uploadProfileImg = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await axios.post('//localhost:5000/upload/userProfile', formData);\r\n    return res.data;\r\n}\r\n\r\nconst uploadBackgroundImg = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await axios.post('//localhost:5000/upload/userBackground', formData);\r\n    return res.data;\r\n}\r\n\r\nexport const updateUser = async ({ data, currentUser }) => {\r\n    const { name, bio, profile_img, profile_bg_img } = data;\r\n    const profileImageUrl = profile_img[0] ? await uploadProfileImg(profile_img[0]) : currentUser.profile_img;\r\n    const backgroundImageUrl = profile_bg_img[0] ? await uploadBackgroundImg(profile_bg_img[0]) : currentUser.profile_bg_img;\r\n\r\n    const userData = {\r\n        name,\r\n        username: currentUser.username,\r\n        bio,\r\n        id: currentUser.id,\r\n        profile_img: profileImageUrl,\r\n        profile_bg_img: backgroundImageUrl\r\n    };\r\n    \r\n    await axios.post('//localhost:5000/user', userData);\r\n    return userData;\r\n}\r\n\r\nexport const getFollowedById = async(id) => {\r\n    const res = await axios.get('//localhost:5000/follow', {\r\n        params: {\r\n            followed_user_id: id\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const deleteFollow = async ({ followerId, followedId }) => \r\n    await axios.delete('//localhost:5000/follow', {\r\n        data: {\r\n            follower_user_id: followerId,\r\n            followed_user_id: followedId\r\n        }\r\n    })\r\n\r\nexport const createFollow = async ({ followerId, followedId }) => \r\n    await axios.post('//localhost:5000/follow', {\r\n        follower_user_id: followerId,\r\n        followed_user_id: followedId\r\n    })\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,MAAMI,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,qCAAqC,EAAEJ,QAAQ,CAAC;EAC7E,OAAOG,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,MAAMC,mBAAmB,GAAG,MAAOP,IAAI,IAAK;EACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,MAAMI,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,wCAAwC,EAAEJ,QAAQ,CAAC;EAChF,OAAOG,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,cAAiC;EAAA,IAA1B;IAAEF,IAAI;IAAEG;EAAY,CAAC;EAClD,MAAM;IAAEC,IAAI;IAAEC,GAAG;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGP,IAAI;EACvD,MAAMQ,eAAe,GAAGF,WAAW,CAAC,CAAC,CAAC,GAAG,MAAMb,gBAAgB,CAACa,WAAW,CAAC,CAAC,CAAC,CAAC,GAAGH,WAAW,CAACG,WAAW;EACzG,MAAMG,kBAAkB,GAAGF,cAAc,CAAC,CAAC,CAAC,GAAG,MAAMN,mBAAmB,CAACM,cAAc,CAAC,CAAC,CAAC,CAAC,GAAGJ,WAAW,CAACI,cAAc;EAExH,MAAMG,QAAQ,GAAG;IACbN,IAAI;IACJO,QAAQ,EAAER,WAAW,CAACQ,QAAQ;IAC9BN,GAAG;IACHO,EAAE,EAAET,WAAW,CAACS,EAAE;IAClBN,WAAW,EAAEE,eAAe;IAC5BD,cAAc,EAAEE;EACpB,CAAC;EAED,MAAMjB,KAAK,CAACO,IAAI,CAAC,uBAAuB,EAAEW,QAAQ,CAAC;EACnD,OAAOA,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMG,eAAe,GAAG,MAAMD,EAAE,IAAK;EACxC,MAAMd,GAAG,GAAG,MAAMN,KAAK,CAACsB,GAAG,CAAC,yBAAyB,EAAE;IACnDC,MAAM,EAAE;MACJC,gBAAgB,EAAEJ;IACtB;EACJ,CAAC,CAAC;EACF,OAAOd,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,OAAO,MAAMiB,YAAY,GAAG;EAAA,IAAO;IAAEC,UAAU;IAAEC;EAAW,CAAC;EAAA,OACzD,MAAM3B,KAAK,CAAC4B,MAAM,CAAC,yBAAyB,EAAE;IAC1CpB,IAAI,EAAE;MACFqB,gBAAgB,EAAEH,UAAU;MAC5BF,gBAAgB,EAAEG;IACtB;EACJ,CAAC,CAAC;AAAA;AAEN,OAAO,MAAMG,YAAY,GAAG;EAAA,IAAO;IAAEJ,UAAU;IAAEC;EAAW,CAAC;EAAA,OACzD,MAAM3B,KAAK,CAACO,IAAI,CAAC,yBAAyB,EAAE;IACxCsB,gBAAgB,EAAEH,UAAU;IAC5BF,gBAAgB,EAAEG;EACtB,CAAC,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
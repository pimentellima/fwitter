{"ast":null,"code":"import moment from \"moment\";\nimport { request } from \"../utils/axios\";\nimport { uploadPostImg } from \"../utils/upload\";\nexport const getUserPostsById = async id => {\n  const res = await request.get('/posts/' + id);\n  return res.data;\n};\nexport const getPostsById = async id => request.get('/posts/', {\n  params: {\n    id\n  }\n}).then(res => res.data.map(post => ({\n  ...post,\n  ingredients: JSON.parse(post.ingredients),\n  date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n})));\nexport const getBookmarkedPosts = async id => {\n  const res = await request.get('/bookmarks/' + id);\n  return res.data;\n};\nexport const getComments = async parent_id => {\n  const res = await request.get('/comments', {\n    params: {\n      parent_id\n    }\n  });\n  return res.data;\n};\nexport const getLikes = async post_id => {\n  const res = await request.get('/likes', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const createLike = async _ref => {\n  let {\n    post_id,\n    user_id\n  } = _ref;\n  return await request.post('/likes', {\n    post_id,\n    user_id\n  });\n};\nexport const deleteLike = async _ref2 => {\n  let {\n    post_id,\n    user_id\n  } = _ref2;\n  return await request.delete('/likes', {\n    data: {\n      post_id,\n      user_id\n    }\n  });\n};\nexport const createShare = async _ref3 => {\n  let {\n    post_id,\n    user_id\n  } = _ref3;\n  return await request.post('/share', {\n    post_id,\n    user_id,\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n  });\n};\nexport const deleteShare = async _ref4 => {\n  let {\n    post_id,\n    user_id\n  } = _ref4;\n  return await request.delete('/share', {\n    data: {\n      post_id,\n      user_id\n    }\n  });\n};\nexport const getShares = async post_id => {\n  const res = await request.get('/share', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const getBookmarks = async post_id => {\n  const res = await request.get('/bookmarks', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const createBookmark = async _ref5 => {\n  let {\n    post_id,\n    user_id\n  } = _ref5;\n  return await request.post('/bookmarks', {\n    post_id,\n    user_id,\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n  });\n};\nexport const deleteBookmark = async _ref6 => {\n  let {\n    post_id,\n    user_id\n  } = _ref6;\n  return await request.delete('/bookmarks', {\n    data: {\n      post_id,\n      user_id\n    }\n  });\n};","map":{"version":3,"names":["moment","request","uploadPostImg","getUserPostsById","id","res","get","data","getPostsById","params","then","map","post","ingredients","JSON","parse","date","format","getBookmarkedPosts","getComments","parent_id","getLikes","post_id","createLike","user_id","deleteLike","delete","createShare","deleteShare","getShares","getBookmarks","createBookmark","deleteBookmark"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/services/postsService.js"],"sourcesContent":["import moment from \"moment\";\r\nimport { request } from \"../utils/axios\";\r\nimport { uploadPostImg } from \"../utils/upload\";\r\n\r\nexport const getUserPostsById = async(id) => {\r\n    const res = await request.get('/posts/' + id);\r\n    return res.data;\r\n}\r\n\r\nexport const getPostsById = async(id) => \r\n    request.get('/posts/', {\r\n        params: { id }\r\n    }).then(res => res.data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n    })\r\n))\r\n\r\nexport const getBookmarkedPosts = async(id) => {\r\n    const res = await request.get('/bookmarks/' + id);\r\n    return res.data;\r\n}\r\n\r\n\r\n\r\nexport const getComments = async (parent_id) => {\r\n    const res = await request.get('/comments', {\r\n        params: {\r\n            parent_id,\r\n        }\r\n    })\r\n    return res.data;        \r\n}\r\n\r\nexport const getLikes = async (post_id) => {\r\n    const res = await request.get('/likes', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const createLike = async ({ post_id, user_id }) => \r\n    await request.post('/likes', {\r\n        post_id,\r\n        user_id\r\n    })\r\n\r\nexport const deleteLike = async ({ post_id, user_id }) => \r\n    await request.delete('/likes', {\r\n        data: {\r\n            post_id,\r\n            user_id\r\n    }})\r\n\r\nexport const createShare = async ({ post_id, user_id }) =>\r\n    await request.post('/share', {\r\n        post_id,\r\n        user_id,\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    })\r\n\r\nexport const deleteShare = async ({ post_id, user_id }) => \r\n    await request.delete('/share', {\r\n        data: {\r\n            post_id,\r\n            user_id\r\n    }})\r\n\r\n\r\nexport const getShares = async (post_id) => {\r\n    const res = await request.get('/share', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const getBookmarks = async (post_id) => {\r\n    const res = await request.get('/bookmarks', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const createBookmark = async ({ post_id, user_id }) =>\r\n    await request.post('/bookmarks', {\r\n        post_id,\r\n        user_id,\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    })\r\n\r\nexport const deleteBookmark = async ({ post_id, user_id }) => \r\n    await request.delete('/bookmarks', {\r\n        data: {\r\n            post_id,\r\n            user_id\r\n    }})\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\postPage\\\\postPage.js\",\n  _s = $RefreshSig$();\nimport 'moment/locale/pt-br';\nimport { useEffect, useRef } from \"react\";\nimport { useMatch } from \"react-router-dom\";\nimport { useCreatePostMutation } from \"../../hooks/useCreatePostMutation\";\nimport { useGetPostByIdQuery } from \"../../hooks/useGetPostByIdQuery\";\nimport CreateCommentForm from \"../post/createCommentForm\";\nimport Post from \"../post/post\";\nimport { fetchPostThread } from \"./fetchPostThread\";\nimport { useGetCommentsQuery } from \"./useGetCommentsQuery\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const match = useMatch(\"/post/:id\");\n  const id = match.params.id;\n  const postRef = useRef();\n  const {\n    data: post,\n    isFetching: isFetchingPost\n  } = useGetPostByIdQuery({\n    id\n  });\n  const createPostMutation = useCreatePostMutation({\n    parent_id: id\n  });\n  const thread = fetchPostThread(id);\n  const {\n    data: comments,\n    isFetching: isFetchingComments\n  } = useGetCommentsQuery({\n    id\n  });\n  const scroll = () => {\n    if (thread && thread.length == 0) window.scroll(0, 0);else {\n      postRef.current.scrollIntoView({\n        block: 'start'\n      });\n      window.scrollBy({\n        top: -50\n      });\n    }\n  };\n  const isFetching = isFetchingPost || isFetchingComments;\n  useEffect(() => {\n    if (!isFetching) scroll();\n  }, [isFetching]);\n  if (isFetching) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky top-0 border-b border-stone-700 \\r pt-2 pb-4 pl-3 font-medium text-xl \\r z-20 bg-stone-800\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), thread && thread.length > 0 && thread.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `hover:backdrop-brightness-110 \n                                hover:cursor-pointer`,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        isThread: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: postRef,\n      className: \"[&_>*]:border-b \\r [&_>*]:border-stone-700\",\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateCommentForm, {\n        onSubmit: data => createPostMutation.mutate(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), comments && comments.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hover:backdrop-brightness-110 \\r hover:cursor-pointer border-b border-stone-700\",\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"hTn5gS/fukowDgbFxtTJiCWlFLQ=\", false, function () {\n  return [useMatch, useGetPostByIdQuery, useCreatePostMutation, useGetCommentsQuery];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useEffect","useRef","useMatch","useCreatePostMutation","useGetPostByIdQuery","CreateCommentForm","Post","fetchPostThread","useGetCommentsQuery","PostPage","match","id","params","postRef","data","post","isFetching","isFetchingPost","createPostMutation","parent_id","thread","comments","isFetchingComments","scroll","length","window","current","scrollIntoView","block","scrollBy","top","map","mutate","index"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/postPage/postPage.js"],"sourcesContent":["import 'moment/locale/pt-br';\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport { useCreatePostMutation } from \"../../hooks/useCreatePostMutation\";\r\nimport { useGetPostByIdQuery } from \"../../hooks/useGetPostByIdQuery\";\r\nimport CreateCommentForm from \"../post/createCommentForm\";\r\nimport Post from \"../post/post\";\r\nimport { fetchPostThread } from \"./fetchPostThread\";\r\nimport { useGetCommentsQuery } from \"./useGetCommentsQuery\";\r\n\r\nconst PostPage = () => {\r\n    const match = useMatch(\"/post/:id\");\r\n    const id = match.params.id;\r\n    const postRef = useRef();\r\n\r\n    const { \r\n        data: post, \r\n        isFetching: isFetchingPost \r\n    } = useGetPostByIdQuery({ id });\r\n\r\n    const createPostMutation  = useCreatePostMutation({ parent_id: id })\r\n\r\n    const thread = fetchPostThread(id);\r\n    \r\n    const { \r\n        data: comments, \r\n        isFetching: isFetchingComments \r\n        } = useGetCommentsQuery({ id })\r\n    \r\n    const scroll = () => {\r\n        if(thread && thread.length == 0) window.scroll(0,0);\r\n        else {\r\n            postRef.current.scrollIntoView({ block:'start' });\r\n            window.scrollBy({ top: -50 })\r\n        } \r\n    }\r\n\r\n    const isFetching = isFetchingPost || isFetchingComments\r\n    \r\n    useEffect(() => {\r\n        if(!isFetching) scroll();\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <></>\r\n\r\n    return (\r\n        <div> \r\n            <div className='sticky top-0 border-b border-stone-700 \r\n                            pt-2 pb-4 pl-3 font-medium text-xl \r\n                            z-20 bg-stone-800'>\r\n                <p>Fweet</p>\r\n            </div> \r\n            {thread && thread.length > 0 && thread.map(post => \r\n                <div \r\n                    className={`hover:backdrop-brightness-110 \r\n                                hover:cursor-pointer`}\r\n                    key={post.id}\r\n                    >\r\n                    <Post post={post} isThread={true} />\r\n                </div>\r\n            )}\r\n            <div ref={postRef} className=\"[&_>*]:border-b \r\n                                        [&_>*]:border-stone-700\">\r\n                <Post post={post}/>\r\n                <CreateCommentForm onSubmit={\r\n                    (data) => createPostMutation.mutate(data)\r\n                }/>\r\n            </div>\r\n            {comments && comments.map((post, index) => \r\n                <div \r\n                    key={post.id}\r\n                    className='hover:backdrop-brightness-110 \r\n                                hover:cursor-pointer border-b border-stone-700'\r\n                    >\r\n                    <Post post={post}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
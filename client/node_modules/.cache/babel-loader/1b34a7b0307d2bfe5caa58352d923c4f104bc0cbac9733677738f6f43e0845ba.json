{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport axios from 'axios';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nconst url = 'http://localhost:5000';\nexport const useUser = id => {\n  _s();\n  return useQuery(['postUser'], async () => {\n    const res = await axios.get(url + '/user/' + id);\n    return res.data[0];\n  });\n};\n_s(useUser, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useLikes = id => {\n  _s2();\n  return useQuery(['postLikes'], {\n    post_id: id\n  }, async () => {\n    const res = await axios.get(url + '/likes', {\n      params: {\n        post_id: id\n      }\n    });\n    return res.data;\n  });\n};\n_s2(useLikes, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useComments = id => {\n  _s3();\n  return useQuery(['postComments'], {\n    post_id: id\n  }, async () => {\n    const res = await axios.get(url + '/comments', {\n      params: {\n        post_id: id\n      }\n    });\n    return res.data;\n  });\n};\n_s3(useComments, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useDeletePost = id => {\n  _s4();\n  const queryClient = useQueryClient();\n  return useMutation(async () => await request.delete('/posts', {\n    data: {\n      id\n    }\n  }), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['posts']);\n      queryClient.invalidateQueries(['profilePosts']);\n    }\n  });\n};\n_s4(useDeletePost, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useCreateLike = _ref => {\n  _s5();\n  let {\n    post_id,\n    user_id\n  } = _ref;\n  const queryClient = useQueryClient();\n  return useMutation(async () => await request.post('/likes', {\n    post_id,\n    user_id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id: id\n    }])\n  });\n};\n_s5(useCreateLike, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\nexport const useDeleteLike = _ref2 => {\n  _s6();\n  let {\n    post_id,\n    user_id\n  } = _ref2;\n  const queryClient = useQueryClient();\n  return useMutation(async () => await request.delete('/likes', {\n    data: {\n      post_id,\n      user_id\n    }\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id: id\n    }])\n  });\n};\n_s6(useDeleteLike, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["axios","useMutation","useQuery","useQueryClient","url","useUser","id","res","get","data","useLikes","post_id","params","useComments","useDeletePost","queryClient","request","delete","onSuccess","invalidateQueries","useCreateLike","user_id","post","useDeleteLike"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/queries.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nconst url = 'http://localhost:5000';\r\n\r\n\r\n\r\nexport const useUser = (id) => {\r\n    return useQuery(['postUser'], async () => {\r\n        const res = await axios.get(url + '/user/' + id)\r\n        return res.data[0];\r\n    })\r\n}\r\n\r\nexport const useLikes = (id) => {\r\n    return useQuery(['postLikes'], { post_id: id }, async () => {\r\n        const res = await axios.get(url + '/likes', {\r\n            params: {\r\n                post_id: id\r\n            }\r\n        });\r\n        return res.data;    \r\n    })\r\n}\r\n\r\nexport const useComments = (id) => {\r\n    return useQuery(['postComments'], { post_id: id }, async () => {\r\n        const res = await axios.get(url + '/comments', {\r\n            params: {\r\n                post_id: id\r\n            }\r\n        }) \r\n        return res.data;\r\n    })\r\n}\r\n\r\nexport const useDeletePost = (id) => {\r\n    const queryClient = useQueryClient();\r\n    return useMutation(async () => \r\n        await request.delete('/posts', {\r\n            data: { id }\r\n        }), {\r\n            onSuccess: () => {\r\n                queryClient.invalidateQueries(['posts']);\r\n                queryClient.invalidateQueries(['profilePosts']);\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nexport const useCreateLike = ({ post_id, user_id }) => {\r\n    const queryClient = useQueryClient();\r\n    return useMutation(async () => \r\n        await request.post('/likes', {\r\n            post_id,\r\n            user_id\r\n        }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postLike', { post_id: id }])\r\n        }\r\n    )\r\n}\r\n\r\nexport const useDeleteLike = ({ post_id, user_id }) => {\r\n    const queryClient = useQueryClient();\r\n    return useMutation(async () => \r\n        await request.delete('/likes', {\r\n            data: {\r\n                post_id,\r\n                user_id\r\n        }}), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postLike', { post_id: id }])\r\n        }\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
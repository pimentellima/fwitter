{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\profilePage.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport moment from \"moment\";\nimport { useLocation } from \"react-router-dom\";\nimport { getUserPostsById } from \"../services/postsService\";\nimport Post from \"./post/post\";\nimport { getUserByUsername } from \"../services/userService\";\nimport Profile from \"./profile/profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const location = useLocation();\n  const username = location.pathname.slice(1);\n  const {\n    data: user,\n    isFetched: isFetchedUser\n  } = useQuery(['profileUser', {\n    username\n  }], () => getUserByUsername(username));\n  const {\n    data: posts,\n    isFetched: isFetchedPosts\n  } = useQuery(['profilePosts'], () => getUserPostsById(user.id).then(data => data.map(post => ({\n    ...post,\n    ingredients: JSON.parse(post.ingredients),\n    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n  }))), {\n    enabled: isFetchedUser\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isFetched && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky top-0 border-b border-stone-700 pt-2 pb-4 pl-3 font-medium text-xl z-20 bg-stone-800\",\n      children: user && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), isFetchedPosts ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      postObj: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 35\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n};\n_s(ProfilePage, \"pZxoAshven3B5OpnbjVho4D3Jcw=\", false, function () {\n  return [useLocation, useQuery, useQuery];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["useQuery","moment","useLocation","getUserPostsById","Post","getUserByUsername","Profile","ProfilePage","location","username","pathname","slice","data","user","isFetched","isFetchedUser","posts","isFetchedPosts","id","then","map","post","ingredients","JSON","parse","date","format","enabled","name"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/profilePage.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getUserPostsById } from \"../services/postsService\";\r\nimport Post from \"./post/post\";\r\nimport { getUserByUsername } from \"../services/userService\";\r\nimport Profile from \"./profile/profile\";\r\n\r\nconst ProfilePage = () => {\r\n    const location = useLocation();\r\n    const username = location.pathname.slice(1);\r\n\r\n    const { \r\n        data: user, \r\n        isFetched: isFetchedUser \r\n    } = useQuery(['profileUser', { username }], \r\n    () => getUserByUsername(username));\r\n\r\n\r\n    const { data: posts,  isFetched: isFetchedPosts} = useQuery(['profilePosts'], \r\n    () => getUserPostsById(user.id).then(data => \r\n        data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n        }))\r\n    ), \r\n    {\r\n        enabled: isFetchedUser\r\n    });\r\n    \r\n    return ( \r\n        <> \r\n            {isFetched && \r\n                <div className='sticky top-0 border-b border-stone-700 pt-2 pb-4 pl-3 font-medium text-xl z-20 bg-stone-800'>\r\n                    {user && <p>{user.name}</p>}\r\n                </div> \r\n            }\r\n            <Profile/>            \r\n            {isFetchedPosts ?\r\n                posts.map(post => <Post postObj={post} key={post.id}/>)\r\n                :\r\n                <>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfilePage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,OAAOC,OAAO,MAAM,mBAAmB;AAAC;AAAA;AAExC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,QAAQ,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;EAE3C,MAAM;IACFC,IAAI,EAAEC,IAAI;IACVC,SAAS,EAAEC;EACf,CAAC,GAAGf,QAAQ,CAAC,CAAC,aAAa,EAAE;IAAES;EAAS,CAAC,CAAC,EAC1C,MAAMJ,iBAAiB,CAACI,QAAQ,CAAC,CAAC;EAGlC,MAAM;IAAEG,IAAI,EAAEI,KAAK;IAAGF,SAAS,EAAEG;EAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,cAAc,CAAC,EAC5E,MAAMG,gBAAgB,CAACU,IAAI,CAACK,EAAE,CAAC,CAACC,IAAI,CAACP,IAAI,IACrCA,IAAI,CAACQ,GAAG,CAACC,IAAI,KAAK;IACd,GAAGA,IAAI;IACPC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACC,WAAW,CAAC;IACzCG,IAAI,EAAExB,MAAM,CAACoB,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;EACxD,CAAC,CAAC,CAAC,CACN,EACD;IACIC,OAAO,EAAEZ;EACb,CAAC,CAAC;EAEF,oBACI;IAAA,WACKD,SAAS,iBACN;MAAK,SAAS,EAAC,6FAA6F;MAAA,UACvGD,IAAI,iBAAI;QAAA,UAAIA,IAAI,CAACe;MAAI;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACzB,eAEV,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE,EACTX,cAAc,GACXD,KAAK,CAACI,GAAG,CAACC,IAAI,iBAAI,QAAC,IAAI;MAAC,OAAO,EAAEA;IAAK,GAAMA,IAAI,CAACH,EAAE;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC,gBAEvD,qCACG;EAAA,gBAER;AAEX,CAAC;AAAA,GAvCKX,WAAW;EAAA,QACIL,WAAW,EAMxBF,QAAQ,EAIuCA,QAAQ;AAAA;AAAA,KAXzDO,WAAW;AA0CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import moment from \"moment\";\nimport { request } from \"../utils/axios\";\nexport const getUserPostsById = async id => {\n  const res = await request.get('/posts/' + id);\n  return res.data;\n};\nexport const getPostsById = async id => request.get('/posts/', {\n  params: {\n    id\n  }\n}).then(res => res.data.map(post => ({\n  ...post,\n  ingredients: JSON.parse(post.ingredients),\n  date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n})));\nexport const getBookmarkedPosts = async id => {\n  const res = await request.get('/bookmarks/' + id);\n  return res.data;\n};\nexport const getPostThread = async id => {\n  const postsArr = [];\n  let post = await getPostById(id);\n  while (post.parent_id) {\n    post = await getPostById(post.parent_id);\n    postsArr.unshift(post);\n  }\n  return postsArr;\n};\nexport const getPostById = async id => request.get('/single', {\n  params: {\n    id\n  }\n}).then(res => {\n  const post = res.data[0];\n  return {\n    ...res.data[0],\n    ingredients: JSON.parse(post.ingredients),\n    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n  };\n});\nexport const uploadImg = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await request.post('/upload/post/', formData);\n  return res.data;\n};\nexport const getComments = async parent_id => {\n  const res = await request.get('/comments', {\n    params: {\n      parent_id\n    }\n  });\n  return res.data;\n};\nexport const createPost = async _ref => {\n  let {\n    data,\n    user_id,\n    parent_id\n  } = _ref;\n  const {\n    title,\n    description,\n    ingredients,\n    post_img\n  } = data;\n  const fileUrl = post_img[0] ? await uploadImg(post_img[0]) : '';\n  const postObj = {\n    user_id,\n    parent_id,\n    title,\n    description,\n    ingredients: JSON.stringify(ingredients),\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n    file: fileUrl\n  };\n  return await request.post('/single/', postObj);\n};\nexport const deletePost = async id => await request.delete('/single/', {\n  data: {\n    id\n  }\n});\nexport const getLikes = async post_id => {\n  const res = await request.get('/likes', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const createLike = async _ref2 => {\n  let {\n    post_id,\n    user_id\n  } = _ref2;\n  return await request.post('/likes', {\n    post_id,\n    user_id\n  });\n};\nexport const deleteLike = async _ref3 => {\n  let {\n    post_id,\n    user_id\n  } = _ref3;\n  return await request.delete('/likes', {\n    data: {\n      post_id,\n      user_id\n    }\n  });\n};\nexport const createShare = async _ref4 => {\n  let {\n    post_id,\n    user_id\n  } = _ref4;\n  return await request.post('/share', {\n    post_id,\n    user_id,\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n  });\n};\nexport const deleteShare = async _ref5 => {\n  let {\n    post_id,\n    user_id\n  } = _ref5;\n  return await request.delete('/share', {\n    data: {\n      post_id,\n      user_id\n    }\n  });\n};\nexport const getShares = async post_id => {\n  const res = await request.get('/share', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const getBookmarks = async post_id => {\n  const res = await request.get('/bookmarks', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const createBookmark = async _ref6 => {\n  let {\n    post_id,\n    user_id\n  } = _ref6;\n  return await request.post('/bookmarks', {\n    post_id,\n    user_id,\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n  });\n};\nexport const deleteBookmark = async _ref7 => {\n  let {\n    post_id,\n    user_id\n  } = _ref7;\n  return await request.delete('/bookmarks', {\n    data: {\n      post_id,\n      user_id\n    }\n  });\n};","map":{"version":3,"names":["moment","request","getUserPostsById","id","res","get","data","getPostsById","params","then","map","post","ingredients","JSON","parse","date","format","getBookmarkedPosts","getPostThread","postsArr","getPostById","parent_id","unshift","uploadImg","file","formData","FormData","append","getComments","createPost","user_id","title","description","post_img","fileUrl","postObj","stringify","deletePost","delete","getLikes","post_id","createLike","deleteLike","createShare","deleteShare","getShares","getBookmarks","createBookmark","deleteBookmark"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/services/postsService.js"],"sourcesContent":["import moment from \"moment\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport const getUserPostsById = async(id) => {\r\n    const res = await request.get('/posts/' + id);\r\n    return res.data;\r\n}\r\n\r\nexport const getPostsById = async(id) => \r\n    request.get('/posts/', {\r\n        params: { id }\r\n    }).then(res => res.data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n    })\r\n))\r\n\r\nexport const getBookmarkedPosts = async(id) => {\r\n    const res = await request.get('/bookmarks/' + id);\r\n    return res.data;\r\n}\r\n\r\nexport const getPostThread = async id => {\r\n    const postsArr = [];\r\n    let post = await getPostById(id);\r\n    while(post.parent_id) {\r\n        post = await getPostById(post.parent_id);\r\n        postsArr.unshift(post);\r\n    }\r\n    return postsArr;\r\n}\r\n\r\nexport const getPostById = async id => \r\n    request.get('/single', {\r\n        params: { id }\r\n    }).then(res => {\r\n        const post = res.data[0];\r\n        return {\r\n            ...res.data[0], \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n        }\r\n    })\r\n\r\n\r\nexport const uploadImg = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await request.post('/upload/post/', formData);\r\n    return res.data;\r\n}\r\n\r\nexport const getComments = async (parent_id) => {\r\n    const res = await request.get('/comments', {\r\n        params: {\r\n            parent_id,\r\n        }\r\n    })\r\n    return res.data;        \r\n}\r\n\r\nexport const createPost = async ({ data, user_id, parent_id }) => {\r\n    const { title, description, ingredients, post_img } = data;\r\n    const fileUrl = post_img[0] ? await uploadImg(post_img[0]) : '';\r\n    const postObj = {\r\n        user_id,\r\n        parent_id,\r\n        title,\r\n        description,\r\n        ingredients: JSON.stringify(ingredients),\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        file: fileUrl\r\n    }\r\n    return await request.post('/single/', postObj);\r\n}\r\n\r\nexport const deletePost = async id => \r\n    await request.delete('/single/', {\r\n            data: { id }\r\n        })\r\n\r\nexport const getLikes = async (post_id) => {\r\n    const res = await request.get('/likes', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const createLike = async ({ post_id, user_id }) => \r\n    await request.post('/likes', {\r\n        post_id,\r\n        user_id\r\n    })\r\n\r\nexport const deleteLike = async ({ post_id, user_id }) => \r\n    await request.delete('/likes', {\r\n        data: {\r\n            post_id,\r\n            user_id\r\n    }})\r\n\r\nexport const createShare = async ({ post_id, user_id }) =>\r\n    await request.post('/share', {\r\n        post_id,\r\n        user_id,\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    })\r\n\r\nexport const deleteShare = async ({ post_id, user_id }) => \r\n    await request.delete('/share', {\r\n        data: {\r\n            post_id,\r\n            user_id\r\n    }})\r\n\r\n\r\nexport const getShares = async (post_id) => {\r\n    const res = await request.get('/share', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const getBookmarks = async (post_id) => {\r\n    const res = await request.get('/bookmarks', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const createBookmark = async ({ post_id, user_id }) =>\r\n    await request.post('/bookmarks', {\r\n        post_id,\r\n        user_id,\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    })\r\n\r\nexport const deleteBookmark = async ({ post_id, user_id }) => \r\n    await request.delete('/bookmarks', {\r\n        data: {\r\n            post_id,\r\n            user_id\r\n    }})\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { request } from \"../../utils/axios\";\nexport const useUpdateUser = (data, _ref) => {\n  _s();\n  let {\n    closeModal = () => {}\n  } = _ref;\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(AuthContext);\n  const queryClient = useQueryClient();\n  const uploadProfileImg = async file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await request.post('/upload/userProfile', formData);\n    return res.data;\n  };\n  const uploadBackgroundImg = async file => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await request.post('/upload/userBackground', formData);\n    return res.data;\n  };\n  const updateUser = async () => {\n    const {\n      name,\n      bio,\n      profile_img,\n      profile_bg_img\n    } = data;\n    const profileImageUrl = profile_img[0] ? await uploadProfileImg(profile_img[0]) : currentUser.profile_img;\n    const backgroundImageUrl = profile_bg_img[0] ? await uploadBackgroundImg(profile_bg_img[0]) : currentUser.profile_bg_img;\n    const user = {\n      name,\n      username: currentUser.username,\n      bio,\n      id: currentUser.id,\n      profile_img: profileImageUrl,\n      profile_bg_img: backgroundImageUrl\n    };\n    return request.post('/user', user).then(() => user);\n  };\n  const updateUserMutation = useMutation(data => updateUser(data).then(user => {\n    setCurrentUser(user);\n  }), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['profileUser', {\n        username: currentUser.username\n      }]);\n      queryClient.invalidateQueries(['postUser', {\n        user_id: currentUser.id\n      }]);\n      closeModal();\n    }\n  });\n  return {\n    updateUser: data => updateUserMutation.mutate(data)\n  };\n};\n_s(useUpdateUser, \"pwc9egO6e5yIVXhfJ8xaRI8tXZw=\", false, function () {\n  return [useQueryClient, useMutation];\n});","map":{"version":3,"names":["useMutation","useQueryClient","useContext","useEffect","AuthContext","request","useUpdateUser","data","closeModal","currentUser","setCurrentUser","queryClient","uploadProfileImg","file","formData","FormData","append","res","post","uploadBackgroundImg","updateUser","name","bio","profile_img","profile_bg_img","profileImageUrl","backgroundImageUrl","user","username","id","then","updateUserMutation","onSuccess","invalidateQueries","user_id","mutate"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/profile/useUpdateUser.js"],"sourcesContent":["import { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport { request } from \"../../utils/axios\";\r\n\r\nexport const useUpdateUser = (data, { closeModal = () => {} }) => {\r\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n    const queryClient = useQueryClient();\r\n\r\n    const uploadProfileImg = async (file) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        const res = await request.post('/upload/userProfile', formData);\r\n        return res.data;\r\n    }\r\n    \r\n    const uploadBackgroundImg = async (file) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        const res = await request.post('/upload/userBackground', formData);\r\n        return res.data;\r\n    }\r\n    \r\n    const updateUser = async () => {\r\n        const { name, bio, profile_img, profile_bg_img } = data;\r\n        const profileImageUrl = profile_img[0] ? \r\n            await uploadProfileImg(profile_img[0]) \r\n            : \r\n            currentUser.profile_img;\r\n\r\n        const backgroundImageUrl = profile_bg_img[0] ? \r\n            await uploadBackgroundImg(profile_bg_img[0]) \r\n            : \r\n            currentUser.profile_bg_img;\r\n    \r\n        const user = {\r\n            name,\r\n            username: currentUser.username,\r\n            bio,\r\n            id: currentUser.id,\r\n            profile_img: profileImageUrl,\r\n            profile_bg_img: backgroundImageUrl\r\n        };\r\n        \r\n        return request.post('/user', user).then(() => user);\r\n    }\r\n\r\n    const updateUserMutation = useMutation(\r\n        data => updateUser(data).then((user) => {\r\n            setCurrentUser(user);\r\n        }), {\r\n                onSuccess: () => {\r\n                    queryClient.invalidateQueries(['profileUser', { \r\n                        username: currentUser.username\r\n                    }]);\r\n                    queryClient.invalidateQueries(['postUser', { \r\n                        user_id: currentUser.id \r\n                    }]);\r\n                    closeModal();\r\n                }\r\n        }\r\n    )\r\n\r\n    return { updateUser: data => updateUserMutation.mutate(data) }\r\n}\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,uBAAuB;AACnE,SAASC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,OAAO,MAAMC,aAAa,GAAG,CAACC,IAAI,WAAgC;EAAA;EAAA,IAA9B;IAAEC,UAAU,GAAG,MAAM,CAAC;EAAE,CAAC;EACzD,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;EAC/D,MAAMO,WAAW,GAAGV,cAAc,EAAE;EAEpC,MAAMW,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,MAAMI,GAAG,GAAG,MAAMZ,OAAO,CAACa,IAAI,CAAC,qBAAqB,EAAEJ,QAAQ,CAAC;IAC/D,OAAOG,GAAG,CAACV,IAAI;EACnB,CAAC;EAED,MAAMY,mBAAmB,GAAG,MAAON,IAAI,IAAK;IACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,MAAMI,GAAG,GAAG,MAAMZ,OAAO,CAACa,IAAI,CAAC,wBAAwB,EAAEJ,QAAQ,CAAC;IAClE,OAAOG,GAAG,CAACV,IAAI;EACnB,CAAC;EAED,MAAMa,UAAU,GAAG,YAAY;IAC3B,MAAM;MAAEC,IAAI;MAAEC,GAAG;MAAEC,WAAW;MAAEC;IAAe,CAAC,GAAGjB,IAAI;IACvD,MAAMkB,eAAe,GAAGF,WAAW,CAAC,CAAC,CAAC,GAClC,MAAMX,gBAAgB,CAACW,WAAW,CAAC,CAAC,CAAC,CAAC,GAEtCd,WAAW,CAACc,WAAW;IAE3B,MAAMG,kBAAkB,GAAGF,cAAc,CAAC,CAAC,CAAC,GACxC,MAAML,mBAAmB,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC,GAE5Cf,WAAW,CAACe,cAAc;IAE9B,MAAMG,IAAI,GAAG;MACTN,IAAI;MACJO,QAAQ,EAAEnB,WAAW,CAACmB,QAAQ;MAC9BN,GAAG;MACHO,EAAE,EAAEpB,WAAW,CAACoB,EAAE;MAClBN,WAAW,EAAEE,eAAe;MAC5BD,cAAc,EAAEE;IACpB,CAAC;IAED,OAAOrB,OAAO,CAACa,IAAI,CAAC,OAAO,EAAES,IAAI,CAAC,CAACG,IAAI,CAAC,MAAMH,IAAI,CAAC;EACvD,CAAC;EAED,MAAMI,kBAAkB,GAAG/B,WAAW,CAClCO,IAAI,IAAIa,UAAU,CAACb,IAAI,CAAC,CAACuB,IAAI,CAAEH,IAAI,IAAK;IACpCjB,cAAc,CAACiB,IAAI,CAAC;EACxB,CAAC,CAAC,EAAE;IACIK,SAAS,EAAE,MAAM;MACbrB,WAAW,CAACsB,iBAAiB,CAAC,CAAC,aAAa,EAAE;QAC1CL,QAAQ,EAAEnB,WAAW,CAACmB;MAC1B,CAAC,CAAC,CAAC;MACHjB,WAAW,CAACsB,iBAAiB,CAAC,CAAC,UAAU,EAAE;QACvCC,OAAO,EAAEzB,WAAW,CAACoB;MACzB,CAAC,CAAC,CAAC;MACHrB,UAAU,EAAE;IAChB;EACR,CAAC,CACJ;EAED,OAAO;IAAEY,UAAU,EAAEb,IAAI,IAAIwB,kBAAkB,CAACI,MAAM,CAAC5B,IAAI;EAAE,CAAC;AAClE,CAAC;AAAA,GA3DYD,aAAa;EAAA,QAEFL,cAAc,EAwCPD,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
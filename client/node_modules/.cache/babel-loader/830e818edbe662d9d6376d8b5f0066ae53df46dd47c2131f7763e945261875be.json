{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\post\\\\postActions.js\",\n  _s = $RefreshSig$();\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext, useEffect, useState } from \"react\";\nimport BookmarkButton from \"../../components/button/bookmarkButton\";\nimport CommentPopupButton from \"../../components/button/commentPopupButton\";\nimport LikeButton from \"../../components/button/likeButton\";\nimport ShareButton from \"../../components/button/shareButton\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { getBookmarks, createBookmark, deleteBookmark } from '../../services/bookmarksService';\nimport { createLike, deleteLike, getLikes } from '../../services/likesService';\nimport { createShare, deleteShare, getShares } from '../../services/sharesService';\nimport { getComments } from '../../services/commentsService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostActions = _ref => {\n  _s();\n  let {\n    post_id,\n    openCommentPopup\n  } = _ref;\n  const [liked, setLiked] = useState(false);\n  const [shared, setShared] = useState(false);\n  const [bookmarked, setBookmarked] = useState(false);\n  const queryClient = useQueryClient();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data: likes,\n    isFetched: isFetchedLikes\n  } = useQuery(['postLike', {\n    post_id\n  }], () => getLikes(post_id));\n  const {\n    data: comments,\n    isFetched: isFetchedComments\n  } = useQuery(['postComments', {\n    post_id\n  }], () => getComments(post_id));\n  const {\n    data: bookmarks,\n    isFetched: isFetchedBookmarks\n  } = useQuery(['postBookmarks', {\n    post_id\n  }], () => getBookmarks(post_id));\n  const {\n    data: shares,\n    isFetched: isFetchedShares\n  } = useQuery(['postShares', {\n    post_id\n  }], () => getShares(post_id));\n  useEffect(() => {\n    if (shares) {\n      setShared(!!shares.filter(share => share.user_id === currentUser.id).length);\n    }\n  }, [shares]);\n  useEffect(() => {\n    if (likes) {\n      setLiked(!!likes.filter(like => like.user_id === currentUser.id).length);\n    }\n  }, [likes]);\n  useEffect(() => {\n    if (bookmarks) {\n      setBookmarked(!!bookmarks.filter(bookmark => bookmark.user_id === currentUser.id).length);\n    }\n  }, [bookmarks]);\n  const likeMutation = useMutation(() => createLike({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id\n    }])\n  });\n  const deleteLikeMutation = useMutation(() => deleteLike({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id\n    }])\n  });\n  const shareMutation = useMutation(() => createShare({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postShares', {\n      post_id\n    }])\n  });\n  const bookmarkMutation = useMutation(() => createBookmark({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postBookmarks', {\n      post_id\n    }])\n  });\n  const deleteBookmarkMutation = useMutation(() => deleteBookmark({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postBookmarks', {\n      post_id\n    }])\n  });\n  const deleteShareMutation = useMutation(() => deleteShare({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postShares', {\n      post_id\n    }])\n  });\n  const handleShare = e => {\n    e.stopPropagation();\n    shared ? deleteShareMutation.mutate() : shareMutation.mutate();\n  };\n  const handleLike = e => {\n    e.stopPropagation();\n    liked ? deleteLikeMutation.mutate() : likeMutation.mutate();\n  };\n  const handleComment = e => {\n    e.stopPropagation();\n    openCommentPopup();\n  };\n  const handleBookmark = e => {\n    e.stopPropagation();\n    bookmarked ? deleteBookmarkMutation.mutate() : bookmarkMutation.mutate();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row items-center justify-between h-14\",\n    children: [/*#__PURE__*/_jsxDEV(CommentPopupButton, {\n      onClick: e => handleComment(e),\n      comments: isFetchedComments ? comments.length : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ShareButton, {\n      onClick: e => handleShare(e),\n      shares: isFetchedShares ? shares.length : '',\n      active: shared\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n      onClick: e => handleLike(e),\n      active: liked,\n      likes: isFetchedLikes ? likes.length : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BookmarkButton, {\n      onClick: e => handleBookmark(e),\n      active: bookmarked,\n      bookmarks: isFetchedBookmarks ? bookmarks.length : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(PostActions, \"Vd3TIFAJHEYFvqtLOKEdfKlcK3g=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useQuery, useQuery, useMutation, useMutation, useMutation, useMutation, useMutation, useMutation];\n});\n_c = PostActions;\nexport default PostActions;\nvar _c;\n$RefreshReg$(_c, \"PostActions\");","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","useContext","useEffect","useState","BookmarkButton","CommentPopupButton","LikeButton","ShareButton","AuthContext","getBookmarks","createBookmark","deleteBookmark","createLike","deleteLike","getLikes","createShare","deleteShare","getShares","getComments","PostActions","post_id","openCommentPopup","liked","setLiked","shared","setShared","bookmarked","setBookmarked","queryClient","currentUser","data","likes","isFetched","isFetchedLikes","comments","isFetchedComments","bookmarks","isFetchedBookmarks","shares","isFetchedShares","filter","share","user_id","id","length","like","bookmark","likeMutation","onSuccess","invalidateQueries","deleteLikeMutation","shareMutation","bookmarkMutation","deleteBookmarkMutation","deleteShareMutation","handleShare","e","stopPropagation","mutate","handleLike","handleComment","handleBookmark"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/postActions.js"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport BookmarkButton from \"../../components/button/bookmarkButton\";\r\nimport CommentPopupButton from \"../../components/button/commentPopupButton\";\r\nimport LikeButton from \"../../components/button/likeButton\";\r\nimport ShareButton from \"../../components/button/shareButton\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport { \r\n    getBookmarks, \r\n    createBookmark, \r\n    deleteBookmark\r\n} from '../../services/bookmarksService'\r\nimport { createLike, deleteLike, getLikes } from '../../services/likesService';\r\nimport { createShare, deleteShare, getShares} from '../../services/sharesService';\r\nimport { getComments } from '../../services/commentsService';\r\n\r\nconst PostActions = ({ post_id, openCommentPopup }) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [shared, setShared] = useState(false);\r\n    const [bookmarked, setBookmarked] = useState(false);\r\n    const queryClient = useQueryClient();\r\n    const { currentUser } = useContext(AuthContext);\r\n                \r\n    const { data: likes, isFetched: isFetchedLikes } = useQuery(\r\n        ['postLike', { post_id }], () => getLikes(post_id)\r\n        )\r\n\r\n    const { data: comments, isFetched: isFetchedComments } = useQuery(\r\n        ['postComments', { post_id }], () => getComments(post_id)\r\n        )\r\n\r\n    const { data: bookmarks, isFetched: isFetchedBookmarks } = useQuery(\r\n        ['postBookmarks', { post_id }], () => getBookmarks(post_id)\r\n        )\r\n\r\n    const { data: shares, isFetched: isFetchedShares } = useQuery(\r\n        ['postShares', { post_id }], () => getShares(post_id)\r\n        )\r\n\r\n    useEffect(() => {    \r\n        if(shares) {\r\n            setShared(!!shares\r\n                .filter(share =>\r\n                    share.user_id === currentUser.id).length)\r\n        }\r\n    }, [shares])\r\n\r\n    useEffect(() => {\r\n        if(likes) {\r\n            setLiked(!!likes\r\n                .filter(like => \r\n                    like.user_id === currentUser.id).length)\r\n        }\r\n    }, [likes])\r\n\r\n    useEffect(() => {\r\n        if(bookmarks) {\r\n            setBookmarked(!!bookmarks\r\n                .filter(bookmark => \r\n                    bookmark.user_id === currentUser.id).length)\r\n        }\r\n    }, [bookmarks])\r\n\r\n    const likeMutation = useMutation(\r\n        () => createLike({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postLike', { post_id }])\r\n        }\r\n    )\r\n\r\n    const deleteLikeMutation = useMutation(() => \r\n        deleteLike({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postLike', { post_id }])\r\n        }\r\n    )\r\n\r\n    const shareMutation = useMutation(() => \r\n        createShare({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postShares', { post_id }])\r\n        }\r\n    )\r\n\r\n    const bookmarkMutation = useMutation(\r\n        () => createBookmark({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postBookmarks', { post_id }])\r\n        }\r\n    )\r\n\r\n    const deleteBookmarkMutation = useMutation(() => \r\n        deleteBookmark({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postBookmarks', { post_id }])\r\n        }\r\n    )\r\n\r\n    const deleteShareMutation = useMutation(() => \r\n        deleteShare({ post_id, user_id: currentUser.id }), {\r\n        onSuccess: () => \r\n            queryClient.invalidateQueries(['postShares', { post_id }])\r\n        }\r\n    )\r\n\r\n    const handleShare = e => {\r\n        e.stopPropagation();\r\n        shared ? deleteShareMutation.mutate() : shareMutation.mutate();\r\n    }\r\n                                            \r\n    const handleLike = e => {\r\n        e.stopPropagation();\r\n        liked ? deleteLikeMutation.mutate() : likeMutation.mutate();\r\n    }\r\n\r\n    const handleComment = e => {\r\n        e.stopPropagation();\r\n        openCommentPopup();\r\n    }\r\n\r\n    const handleBookmark = e => {\r\n        e.stopPropagation();\r\n        bookmarked ? deleteBookmarkMutation.mutate() \r\n        : bookmarkMutation.mutate();\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-row items-center justify-between h-14\">\r\n            <CommentPopupButton \r\n                onClick={e => handleComment(e)}\r\n                comments={isFetchedComments ? comments.length : ''}\r\n                />\r\n            <ShareButton \r\n                onClick={(e) => handleShare(e)} \r\n                shares={isFetchedShares ? shares.length : ''} \r\n                active={shared}\r\n                />\r\n            <LikeButton \r\n                onClick={(e) => handleLike(e)} \r\n                active={liked}\r\n                likes={isFetchedLikes ? likes.length : ''} \r\n                />\r\n            <BookmarkButton \r\n                onClick={(e) => handleBookmark(e)}\r\n                active={bookmarked}\r\n                bookmarks={isFetchedBookmarks ? bookmarks.length : ''}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostActions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
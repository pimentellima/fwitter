{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\post\\\\postPage.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport moment from \"moment\";\nimport 'moment/locale/pt-br';\nimport { useContext } from \"react\";\nimport { useMatch } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { getComments, getPostById } from \"../../services/postsService\";\nimport { baseURL } from \"../../utils/constants\";\nimport WriteComment from \"../write/writeComment\";\nimport Comment from \"./comment\";\nimport Post from \"./post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const match = useMatch(\"/post/:id\");\n  const id = match.params.id;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data: postObj,\n    isFetched: isFetchedPost\n  } = useQuery(['post', {\n    id\n  }], () => getPostById(id).then(post => ({\n    ...post,\n    ingredients: JSON.parse(post.ingredients),\n    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n  })));\n  const {\n    data: comments,\n    isFetched: isFetchedComments\n  } = useQuery(['postComments', {\n    parent_id: id\n  }], () => getComments(postObj.id), {\n    enabled: isFetchedPost\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky top-0 border-b border-stone-700 pt-2 pb-4 pl-3 font-medium text-xl z-20 bg-stone-800\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), isFetchedPost && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        postObj: postObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row py-2 pr-3  border-b border-stone-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-20 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"w-12 h-12 rounded-[40px]\",\n          src: baseURL + '/upload/user/' + currentUser.profile_img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(WriteComment, {\n          postObj: postObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), isFetchedComments && comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Comment, {\n        commentObj: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"w5j0XK1B8RKBJ2FIzEztLQFM9aw=\", false, function () {\n  return [useMatch, useQuery, useQuery];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useQuery","moment","useContext","useMatch","AuthContext","getComments","getPostById","baseURL","WriteComment","Comment","Post","PostPage","match","id","params","currentUser","data","postObj","isFetched","isFetchedPost","then","post","ingredients","JSON","parse","date","format","comments","isFetchedComments","parent_id","enabled","profile_img","map","comment"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/postPage.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/pt-br';\r\nimport { useContext } from \"react\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport { getComments, getPostById } from \"../../services/postsService\";\r\nimport { baseURL } from \"../../utils/constants\";\r\nimport WriteComment from \"../write/writeComment\";\r\nimport Comment from \"./comment\";\r\nimport Post from \"./post\";\r\n\r\nconst PostPage = () => {\r\n    const match = useMatch(\"/post/:id\");\r\n    const id = match.params.id;\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const { \r\n        data: postObj, \r\n        isFetched: isFetchedPost \r\n    } = useQuery(['post', { id }], () => \r\n        getPostById(id).then(post => ({\r\n                ...post, \r\n                ingredients: JSON.parse(post.ingredients),\r\n                date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n            }\r\n        ))\r\n    )\r\n\r\n    const {\r\n        data: comments,\r\n        isFetched: isFetchedComments\r\n    } = useQuery(['postComments', { parent_id: id }], () => \r\n        getComments(postObj.id),\r\n        {\r\n            enabled: isFetchedPost\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div> \r\n            <div className='sticky top-0 border-b border-stone-700 pt-2 pb-4 pl-3 font-medium text-xl z-20 bg-stone-800'>\r\n                <p>Fweet</p>\r\n            </div> \r\n            {isFetchedPost && <>\r\n                    <Post postObj={postObj}/>\r\n                </>\r\n            } \r\n            <div className=\"flex flex-row py-2 pr-3  border-b border-stone-700\">\r\n                <div className=\"w-20 flex justify-center\">  \r\n                    <img \r\n                        className='w-12 h-12 rounded-[40px]' \r\n                        src={baseURL + '/upload/user/' + currentUser.profile_img}\r\n                        alt=''\r\n                        />\r\n                </div>\r\n                <div className=\"w-full\">\r\n                    <WriteComment postObj={postObj}/>\r\n                </div>\r\n            </div>\r\n            {isFetchedComments && comments.map(comment => \r\n            <div key={comment.id}>\r\n                <Comment commentObj={comment}/>\r\n            </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,qBAAqB;AAC5B,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,6BAA6B;AACtE,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAAA;AAE1B,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAMC,KAAK,GAAGT,QAAQ,CAAC,WAAW,CAAC;EACnC,MAAMU,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACD,EAAE;EAC1B,MAAM;IAAEE;EAAY,CAAC,GAAGb,UAAU,CAACE,WAAW,CAAC;EAE/C,MAAM;IACFY,IAAI,EAAEC,OAAO;IACbC,SAAS,EAAEC;EACf,CAAC,GAAGnB,QAAQ,CAAC,CAAC,MAAM,EAAE;IAAEa;EAAG,CAAC,CAAC,EAAE,MAC3BP,WAAW,CAACO,EAAE,CAAC,CAACO,IAAI,CAACC,IAAI,KAAK;IACtB,GAAGA,IAAI;IACPC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACC,WAAW,CAAC;IACzCG,IAAI,EAAExB,MAAM,CAACoB,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;EACxD,CAAC,CACJ,CAAC,CACL;EAED,MAAM;IACFV,IAAI,EAAEW,QAAQ;IACdT,SAAS,EAAEU;EACf,CAAC,GAAG5B,QAAQ,CAAC,CAAC,cAAc,EAAE;IAAE6B,SAAS,EAAEhB;EAAG,CAAC,CAAC,EAAE,MAC9CR,WAAW,CAACY,OAAO,CAACJ,EAAE,CAAC,EACvB;IACIiB,OAAO,EAAEX;EACb,CAAC,CACJ;EAED,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,6FAA6F;MAAA,uBACxG;QAAA,UAAG;MAAK;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACV,EACLA,aAAa,iBAAI;MAAA,uBACV,QAAC,IAAI;QAAC,OAAO,EAAEF;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAE,iBAC1B,eAEP;MAAK,SAAS,EAAC,oDAAoD;MAAA,wBAC/D;QAAK,SAAS,EAAC,0BAA0B;QAAA,uBACrC;UACI,SAAS,EAAC,0BAA0B;UACpC,GAAG,EAAEV,OAAO,GAAG,eAAe,GAAGQ,WAAW,CAACgB,WAAY;UACzD,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA,QACJ,eACN;QAAK,SAAS,EAAC,QAAQ;QAAA,uBACnB,QAAC,YAAY;UAAC,OAAO,EAAEd;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/B;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,EACLW,iBAAiB,IAAID,QAAQ,CAACK,GAAG,CAACC,OAAO,iBAC1C;MAAA,uBACI,QAAC,OAAO;QAAC,UAAU,EAAEA;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAE,GADzBA,OAAO,CAACpB,EAAE;MAAA;MAAA;MAAA;IAAA,QAEd,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEL;AAEd,CAAC;AAAA,GAvDKF,QAAQ;EAAA,QACIR,QAAQ,EAOlBH,QAAQ,EAYRA,QAAQ;AAAA;AAAA,KApBVW,QAAQ;AAyDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
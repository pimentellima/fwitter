{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\post\\\\postPageController.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport 'moment/locale/pt-br';\nimport { useEffect, useRef } from \"react\";\nimport { useMatch } from \"react-router-dom\";\nimport CreateCommentForm from \"./createCommentForm\";\nimport PostController from \"./postController\";\nimport { getComments } from '../../services/commentsService';\nimport { getPostById } from \"../../services/singleService\";\nimport { getUserById } from \"../../services/userService\";\nimport { getPostThread } from '../../utils/getPostThread';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const match = useMatch(\"/post/:id\");\n  const id = match.params.id;\n  const postRef = useRef();\n  const {\n    data: post,\n    isFetching: isFetchingPost\n  } = useQuery(['post', {\n    id\n  }], () => getPostById(id));\n  const {\n    data: thread,\n    isFetching: isFetchingThread\n  } = useQuery(['postThread', {\n    id\n  }], () => getPostThread(id));\n  const {\n    data: comments,\n    isFetching: isFetchingComments\n  } = useQuery(['postComments', {\n    parent_id: post === null || post === void 0 ? void 0 : post.id\n  }], () => getComments(post.id), {\n    enabled: !!post\n  });\n  const scroll = () => {\n    if (thread.length == 0) window.scroll(0, 0);else {\n      postRef.current.scrollIntoView({\n        block: 'start'\n      });\n      window.scrollBy({\n        top: -50\n      });\n    }\n  };\n  const isFetching = isFetchingPost || isFetchingThread || isFetchingComments;\n  useEffect(() => {\n    if (!isFetching) scroll();\n  }, [isFetching]);\n  if (isFetching) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky top-0 border-b border-stone-700 \\r pt-2 pb-4 pl-3 font-medium text-xl \\r z-20 bg-stone-800\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), thread && thread.length > 0 && thread.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `hover:backdrop-brightness-110 \n                                hover:cursor-pointer`,\n      children: /*#__PURE__*/_jsxDEV(PostController, {\n        isThread: true,\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: postRef,\n      className: \"[&_>*]:border-b \\r [&_>*]:border-stone-700\",\n      children: [/*#__PURE__*/_jsxDEV(PostController, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateCommentForm, {\n        parent_id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), comments && comments.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hover:backdrop-brightness-110 \\r hover:cursor-pointer border-b border-stone-700\",\n      children: /*#__PURE__*/_jsxDEV(PostController, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"i+xwSJ6e/P/jgswMKOXcByA9+LE=\", false, function () {\n  return [useMatch, useQuery, useQuery, useQuery];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useQuery","useEffect","useRef","useMatch","CreateCommentForm","PostController","getComments","getPostById","getUserById","getPostThread","PostPage","match","id","params","postRef","data","post","isFetching","isFetchingPost","thread","isFetchingThread","comments","isFetchingComments","parent_id","enabled","scroll","length","window","current","scrollIntoView","block","scrollBy","top","map","index"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/postPageController.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport 'moment/locale/pt-br';\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useMatch } from \"react-router-dom\";\r\nimport CreateCommentForm from \"./createCommentForm\";\r\nimport PostController from \"./postController\";\r\nimport { getComments } from '../../services/commentsService';\r\nimport { getPostById } from \"../../services/singleService\";\r\nimport { getUserById } from \"../../services/userService\";\r\nimport { getPostThread } from '../../utils/getPostThread';\r\n\r\nconst PostPage = () => {\r\n    const match = useMatch(\"/post/:id\");\r\n    const id = match.params.id;\r\n    const postRef = useRef();\r\n\r\n    const { \r\n        data: post, \r\n        isFetching: isFetchingPost \r\n    } = useQuery(['post', { id }], () => \r\n        getPostById(id)\r\n    )\r\n\r\n    const { \r\n        data: thread, \r\n        isFetching: isFetchingThread \r\n    } = useQuery(['postThread', { id }], () => \r\n        getPostThread(id));\r\n    \r\n    const { \r\n        data: comments, \r\n        isFetching: isFetchingComments \r\n        } = useQuery(['postComments', { parent_id: post?.id }], () => \r\n            getComments(post.id), {\r\n                enabled: !!post\r\n            }\r\n        )\r\n    \r\n    const scroll = () => {\r\n        if(thread.length == 0) window.scroll(0,0);\r\n        else {\r\n            postRef.current.scrollIntoView({ block:'start' });\r\n            window.scrollBy({ top: -50 })\r\n        } \r\n    }\r\n\r\n    const isFetching = isFetchingPost || isFetchingThread || isFetchingComments\r\n    \r\n    useEffect(() => {\r\n        if(!isFetching) scroll();\r\n    }, [isFetching])\r\n\r\n    if(isFetching) return <></>\r\n\r\n    return (\r\n        <div> \r\n            <div className='sticky top-0 border-b border-stone-700 \r\n                            pt-2 pb-4 pl-3 font-medium text-xl \r\n                            z-20 bg-stone-800'>\r\n                <p>Fweet</p>\r\n            </div> \r\n            {thread && thread.length > 0 && thread.map((post, index) => \r\n                <div \r\n                    className={`hover:backdrop-brightness-110 \r\n                                hover:cursor-pointer`}\r\n                    key={post.id}\r\n                    >\r\n                    <PostController isThread={true} post={post}/>\r\n                </div>\r\n            )}\r\n            <div ref={postRef} className=\"[&_>*]:border-b \r\n                                        [&_>*]:border-stone-700\">\r\n                <PostController post={post}/>\r\n                <CreateCommentForm parent_id={id}/>\r\n            </div>\r\n            {comments && comments.map((post, index) => \r\n                <div \r\n                    key={post.id}\r\n                    className='hover:backdrop-brightness-110 \r\n                                hover:cursor-pointer border-b border-stone-700'\r\n                    >\r\n                    <PostController post={post}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
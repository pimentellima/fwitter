{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\feed\\\\profileFeed.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport moment from \"moment\";\nimport { useLocation } from \"react-router-dom\";\nimport { getUserPostsById } from \"../../services/postsService\";\nimport { getUserByUsername } from \"../../services/userService\";\nimport Post from \"../post/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileFeed = () => {\n  _s();\n  const location = useLocation();\n  const {\n    data: user,\n    isFetched: isFetchedUser\n  } = useQuery(['profileUser', {\n    path: location.pathname\n  }], () => getUserByUsername(location.pathname));\n  const {\n    data: posts,\n    isFetched: isFetchedPosts\n  } = useQuery(['profilePosts'], () => getUserPostsById(user.id).then(data => data.map(post => ({\n    ...post,\n    ingredients: JSON.parse(post.ingredients),\n    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n  }))), {\n    enabled: isFetchedUser\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isFetchedPosts ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      postObj: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n_s(ProfileFeed, \"4g6JYLUXvnwFNw7UpRKUEFZOVZc=\", false, function () {\n  return [useLocation, useQuery, useQuery];\n});\n_c = ProfileFeed;\nexport default ProfileFeed;\nvar _c;\n$RefreshReg$(_c, \"ProfileFeed\");","map":{"version":3,"names":["useQuery","moment","useLocation","getUserPostsById","getUserByUsername","Post","ProfileFeed","location","data","user","isFetched","isFetchedUser","path","pathname","posts","isFetchedPosts","id","then","map","post","ingredients","JSON","parse","date","format","enabled"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/feed/profileFeed.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport moment from \"moment\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getUserPostsById } from \"../../services/postsService\";\r\nimport { getUserByUsername } from \"../../services/userService\";\r\nimport Post from \"../post/post\"\r\n\r\nconst ProfileFeed = () => {\r\n    const location = useLocation();\r\n\r\n    const { data: user, isFetched: isFetchedUser } = useQuery(['profileUser', { path: location.pathname }], \r\n    () => getUserByUsername(location.pathname));\r\n\r\n    const { data: posts,  isFetched: isFetchedPosts} = useQuery(['profilePosts'], \r\n    () => getUserPostsById(user.id).then(data => \r\n        data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n        }))\r\n    ), \r\n    {\r\n        enabled: isFetchedUser\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isFetchedPosts ?\r\n                posts.map(post => <Post postObj={post} key={post.id}/>)\r\n                :\r\n                <>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileFeed;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,IAAI,MAAM,cAAc;AAAA;AAAA;AAE/B,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAE9B,MAAM;IAAEM,IAAI,EAAEC,IAAI;IAAEC,SAAS,EAAEC;EAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,aAAa,EAAE;IAAEY,IAAI,EAAEL,QAAQ,CAACM;EAAS,CAAC,CAAC,EACtG,MAAMT,iBAAiB,CAACG,QAAQ,CAACM,QAAQ,CAAC,CAAC;EAE3C,MAAM;IAAEL,IAAI,EAAEM,KAAK;IAAGJ,SAAS,EAAEK;EAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,cAAc,CAAC,EAC5E,MAAMG,gBAAgB,CAACM,IAAI,CAACO,EAAE,CAAC,CAACC,IAAI,CAACT,IAAI,IACrCA,IAAI,CAACU,GAAG,CAACC,IAAI,KAAK;IACd,GAAGA,IAAI;IACPC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACC,WAAW,CAAC;IACzCG,IAAI,EAAEtB,MAAM,CAACkB,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;EACxD,CAAC,CAAC,CAAC,CACN,EACD;IACIC,OAAO,EAAEd;EACb,CAAC,CAAC;EAEF,oBACI;IAAA,UACKI,cAAc,GACXD,KAAK,CAACI,GAAG,CAACC,IAAI,iBAAI,QAAC,IAAI;MAAC,OAAO,EAAEA;IAAK,GAAMA,IAAI,CAACH,EAAE;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC,gBAEvD;EACG,iBAER;AAEX,CAAC;AAAA,GA5BKV,WAAW;EAAA,QACIJ,WAAW,EAEqBF,QAAQ,EAGNA,QAAQ;AAAA;AAAA,KANzDM,WAAW;AA8BjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import moment from \"moment\";\nimport { request } from \"../utils/axios\";\nexport const getUserPostsById = async id => {\n  const res = await request.get('/posts/' + id);\n  return res.data;\n};\nexport const getPostsById = async id => request.get('/posts/', {\n  params: {\n    id\n  }\n}).then(res => console.log(res.data));\nexport const getPostThread = async id => {\n  const postsArr = [];\n  let post = await getPostById(id);\n  while (post.parent_id) {\n    post = await getPostById(post.parent_id);\n    postsArr.unshift(post);\n  }\n  return postsArr;\n};\nexport const getPostById = async id => request.get('/single', {\n  params: {\n    id\n  }\n}).then(res => {\n  const post = res.data[0];\n  return {\n    ...res.data[0],\n    ingredients: JSON.parse(post.ingredients),\n    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n  };\n});\nexport const uploadImg = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await request.post('/upload/post/', formData);\n  return res.data;\n};\nexport const getComments = async parent_id => {\n  const res = await request.get('/comments', {\n    params: {\n      parent_id\n    }\n  });\n  return res.data;\n};\nexport const createPost = async _ref => {\n  let {\n    data,\n    user_id,\n    parent_id\n  } = _ref;\n  const {\n    title,\n    description,\n    ingredients,\n    file\n  } = data;\n  const fileUrl = file && file[0] ? await uploadImg(file[0]) : '';\n  const postObj = {\n    user_id,\n    parent_id,\n    title,\n    description,\n    ingredients: JSON.stringify(ingredients),\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n    file: fileUrl\n  };\n  return await request.post('/single/', postObj);\n};\nexport const deletePost = async id => await request.delete('/single/', {\n  data: {\n    id\n  }\n});\nexport const getLikes = async post_id => {\n  const res = await request.get('/likes', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};\nexport const createLike = async _ref2 => {\n  let {\n    post_id,\n    user_id\n  } = _ref2;\n  return await request.post('/likes', {\n    post_id,\n    user_id\n  });\n};\nexport const deleteLike = async _ref3 => {\n  let {\n    post_id,\n    user_id\n  } = _ref3;\n  return await request.delete('/likes', {\n    data: {\n      post_id,\n      user_id\n    }\n  });\n};\nexport const createShare = async _ref4 => {\n  let {\n    post_id,\n    user_id\n  } = _ref4;\n  return await request.post('/share', {\n    post_id,\n    user_id,\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\")\n  });\n};\nexport const getShares = async post_id => {\n  const res = await request.get('/share', {\n    params: {\n      post_id\n    }\n  });\n  return res.data;\n};","map":{"version":3,"names":["moment","request","getUserPostsById","id","res","get","data","getPostsById","params","then","console","log","getPostThread","postsArr","post","getPostById","parent_id","unshift","ingredients","JSON","parse","date","format","uploadImg","file","formData","FormData","append","getComments","createPost","user_id","title","description","fileUrl","postObj","stringify","deletePost","delete","getLikes","post_id","createLike","deleteLike","createShare","getShares"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/services/postsService.js"],"sourcesContent":["import moment from \"moment\";\r\nimport { request } from \"../utils/axios\";\r\n\r\nexport const getUserPostsById = async(id) => {\r\n    const res = await request.get('/posts/' + id);\r\n    return res.data;\r\n}\r\n\r\nexport const getPostsById = async(id) => \r\n    request.get('/posts/', {\r\n        params: { id }\r\n    }).then(res => console.log(res.data)\r\n)\r\n\r\nexport const getPostThread = async id => {\r\n    const postsArr = [];\r\n    let post = await getPostById(id);\r\n    while(post.parent_id) {\r\n        post = await getPostById(post.parent_id);\r\n        postsArr.unshift(post);\r\n    }\r\n    return postsArr;\r\n}\r\n\r\nexport const getPostById = async id => \r\n    request.get('/single', {\r\n        params: { id }\r\n    }).then(res => {\r\n        const post = res.data[0];\r\n        return {\r\n            ...res.data[0], \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n        }\r\n    })\r\n\r\n\r\nexport const uploadImg = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await request.post('/upload/post/', formData);\r\n    return res.data;\r\n}\r\n\r\nexport const getComments = async (parent_id) => {\r\n    const res = await request.get('/comments', {\r\n        params: {\r\n            parent_id,\r\n        }\r\n    })\r\n    return res.data;        \r\n}\r\n\r\nexport const createPost = async ({ data, user_id, parent_id }) => {\r\n    const { title, description, ingredients, file } = data;\r\n    const fileUrl = (file && file[0]) ? await uploadImg(file[0]) : '';\r\n    const postObj = {\r\n        user_id,\r\n        parent_id,\r\n        title,\r\n        description,\r\n        ingredients: JSON.stringify(ingredients),\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        file: fileUrl\r\n    }\r\n    return await request.post('/single/', postObj);\r\n}\r\n\r\nexport const deletePost = async id => \r\n    await request.delete('/single/', {\r\n            data: { id }\r\n        })\r\n\r\nexport const getLikes = async (post_id) => {\r\n    const res = await request.get('/likes', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\nexport const createLike = async ({ post_id, user_id }) => \r\n    await request.post('/likes', {\r\n        post_id,\r\n        user_id\r\n    })\r\n\r\nexport const deleteLike = async ({ post_id, user_id }) => \r\n    await request.delete('/likes', {\r\n        data: {\r\n            post_id,\r\n            user_id\r\n    }})\r\n\r\nexport const createShare = async ({ post_id, user_id }) =>\r\n    await request.post('/share', {\r\n        post_id,\r\n        user_id,\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    })\r\n\r\nexport const getShares = async (post_id) => {\r\n    const res = await request.get('/share', {\r\n        params: {\r\n            post_id,\r\n        }\r\n    })\r\n    return res.data;\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\post\\\\postActions.js\",\n  _s = $RefreshSig$();\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext, useEffect, useState } from \"react\";\nimport CommentButton from \"../../components/commentButton\";\nimport LikeButton from \"../../components/likeButton\";\nimport SaveButton from \"../../components/saveButton\";\nimport ShareButton from \"../../components/shareButton\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { createLike, createShare, deleteLike, getComments, getLikes } from \"../../services/postsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostActions = _ref => {\n  _s();\n  let {\n    post_id,\n    openCommentPopup\n  } = _ref;\n  const [liked, setLiked] = useState(false);\n  const queryClient = useQueryClient();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data: likes,\n    isFetched: isFetchedLikes\n  } = useQuery(['postLike', {\n    post_id\n  }], () => getLikes(post_id));\n  const {\n    data: comments,\n    isFetched: isFetchedComments\n  } = useQuery(['postComments', {\n    post_id\n  }], () => getComments(post_id));\n  useEffect(() => {\n    if (likes) {\n      setLiked(likes.filter(like => like.user_id === currentUser.id).length ? true : false);\n    }\n  }, [likes]);\n  const likeMutation = useMutation(() => createLike({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id\n    }])\n  });\n  const deleteLikeMutation = useMutation(() => deleteLike({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id\n    }])\n  });\n  const shareMutation = useMutation(() => createShare({\n    post_id,\n    user_id: currentUser.id\n  }, {\n    onSuccess: () => queryClient.invalidateQueries(['postShare', {\n      post_id\n    }])\n  }));\n  const handleShare = e => {\n    e.stopPropagation();\n    shareMutation.mutate();\n  };\n  const handleLike = e => {\n    e.stopPropagation();\n    liked ? deleteLikeMutation.mutate() : likeMutation.mutate();\n  };\n  const handleComment = e => {\n    e.stopPropagation();\n    openCommentPopup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-2 flex flex-row items-center justify-between  h-14\",\n    children: [/*#__PURE__*/_jsxDEV(CommentButton, {\n      comments: isFetchedComments ? comments.length : '',\n      onClick: e => handleComment(e),\n      active: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n      likes: isFetchedLikes ? likes.length : '',\n      onClick: e => handleLike(e),\n      active: liked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ShareButton, {\n      active: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n      active: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(PostActions, \"xc10DRbwn7t8uNuVLnen7OpquNk=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useMutation, useMutation, useMutation];\n});\n_c = PostActions;\nexport default PostActions;\nvar _c;\n$RefreshReg$(_c, \"PostActions\");","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","useContext","useEffect","useState","CommentButton","LikeButton","SaveButton","ShareButton","AuthContext","createLike","createShare","deleteLike","getComments","getLikes","PostActions","post_id","openCommentPopup","liked","setLiked","queryClient","currentUser","data","likes","isFetched","isFetchedLikes","comments","isFetchedComments","filter","like","user_id","id","length","likeMutation","onSuccess","invalidateQueries","deleteLikeMutation","shareMutation","handleShare","e","stopPropagation","mutate","handleLike","handleComment"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/postActions.js"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport CommentButton from \"../../components/commentButton\";\r\nimport LikeButton from \"../../components/likeButton\";\r\nimport SaveButton from \"../../components/saveButton\";\r\nimport ShareButton from \"../../components/shareButton\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport { createLike, createShare, deleteLike, getComments, getLikes } from \"../../services/postsService\";\r\n\r\nconst PostActions = ({ post_id, openCommentPopup }) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const queryClient = useQueryClient();\r\n    const { currentUser } = useContext(AuthContext);\r\n                \r\n    const { data: likes, isFetched: isFetchedLikes } = useQuery(\r\n        ['postLike', { post_id }], () => getLikes(post_id)\r\n        )\r\n\r\n    const { data: comments, isFetched: isFetchedComments } = useQuery(\r\n        ['postComments', { post_id }], () => getComments(post_id)\r\n        )\r\n\r\n    useEffect(() => {\r\n        if(likes) {\r\n            setLiked(likes\r\n                .filter(like => \r\n                    like.user_id === currentUser.id).length ? true : false)\r\n        }\r\n    }, [likes])\r\n\r\n    const likeMutation = useMutation(\r\n        () => createLike({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => queryClient.invalidateQueries(['postLike', { post_id }])\r\n        }\r\n    )\r\n\r\n    const deleteLikeMutation = useMutation(\r\n        () => deleteLike({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => queryClient.invalidateQueries(['postLike', { post_id }])\r\n        }\r\n    )\r\n\r\n    const shareMutation = useMutation(() => \r\n        createShare({ post_id, user_id: currentUser.id }, {\r\n            onSuccess: () => queryClient.invalidateQueries(['postShare', { post_id }])\r\n        })\r\n    )\r\n\r\n    const handleShare = e => {\r\n        e.stopPropagation();\r\n        shareMutation.mutate();\r\n\r\n    }\r\n\r\n    const handleLike = e => {\r\n        e.stopPropagation();\r\n        liked ? deleteLikeMutation.mutate() : likeMutation.mutate();\r\n    }\r\n\r\n    const handleComment = e => {\r\n        e.stopPropagation();\r\n        openCommentPopup();\r\n    }\r\n\r\n    return (\r\n        <div className=\"px-2 flex flex-row items-center justify-between  h-14\">\r\n            <CommentButton comments={isFetchedComments ? comments.length : ''} onClick={e => handleComment(e)} active={false}/>\r\n            <LikeButton likes={isFetchedLikes ? likes.length : ''} onClick={(e) => handleLike(e)} active={liked}/>\r\n            <ShareButton active={false}/>\r\n            <SaveButton active={false}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostActions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
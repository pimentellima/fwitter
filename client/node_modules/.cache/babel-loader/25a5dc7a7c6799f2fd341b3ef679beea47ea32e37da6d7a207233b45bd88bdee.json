{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\postPage.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport moment from \"moment\";\nimport 'moment/locale/pt-br';\nimport { useState } from \"react\";\nimport { useLocation, useMatch } from \"react-router-dom\";\nimport { getPostById } from \"../services/postsService\";\nimport Post from \"./post/post\";\nimport WriteComment from \"./post/writeComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  const match = useMatch(\"/post/:id\");\n  const id = match.params.id;\n  const {\n    data: postObj,\n    isFetched\n  } = useQuery(['post', {\n    id\n  }], () => getPostById(id).then(post => ({\n    ...post,\n    ingredients: JSON.parse(post.ingredients),\n    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n  })));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border-b border-stone-600\",\n    children: isFetched && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        postObj: postObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WriteComment, {\n        postObj: postObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PostPage, \"yLliyGN04q6YA+CgUechcTn2nL8=\", false, function () {\n  return [useMatch, useQuery];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useQuery","moment","useState","useLocation","useMatch","getPostById","Post","WriteComment","PostPage","match","id","params","data","postObj","isFetched","then","post","ingredients","JSON","parse","date","format"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/postPage.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/pt-br';\r\nimport { useState } from \"react\";\r\nimport { useLocation, useMatch } from \"react-router-dom\";\r\nimport { getPostById } from \"../services/postsService\";\r\nimport Post from \"./post/post\";\r\nimport WriteComment from \"./post/writeComment\";\r\n\r\nconst PostPage = () => {\r\n    const match = useMatch(\"/post/:id\");\r\n    const id = match.params.id;\r\n\r\n    const { \r\n        data: postObj, \r\n        isFetched \r\n    } = useQuery(['post', { id }], () => \r\n        getPostById(id).then(post => ({\r\n                ...post, \r\n                ingredients: JSON.parse(post.ingredients),\r\n                date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n            }\r\n        ))\r\n    )\r\n\r\n    return (\r\n        <div className=\"border-b border-stone-600\"> \r\n            {isFetched && <>\r\n                    <Post postObj={postObj}/>\r\n                    <WriteComment postObj={postObj}/>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,qBAAqB;AAC5B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,QAAQ,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,YAAY,MAAM,qBAAqB;AAAC;AAAA;AAE/C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAMC,KAAK,GAAGL,QAAQ,CAAC,WAAW,CAAC;EACnC,MAAMM,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACD,EAAE;EAE1B,MAAM;IACFE,IAAI,EAAEC,OAAO;IACbC;EACJ,CAAC,GAAGd,QAAQ,CAAC,CAAC,MAAM,EAAE;IAAEU;EAAG,CAAC,CAAC,EAAE,MAC3BL,WAAW,CAACK,EAAE,CAAC,CAACK,IAAI,CAACC,IAAI,KAAK;IACtB,GAAGA,IAAI;IACPC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACC,WAAW,CAAC;IACzCG,IAAI,EAAEnB,MAAM,CAACe,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;EACxD,CAAC,CACJ,CAAC,CACL;EAED,oBACI;IAAK,SAAS,EAAC,2BAA2B;IAAA,UACrCP,SAAS,iBAAI;MAAA,wBACN,QAAC,IAAI;QAAC,OAAO,EAAED;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACzB,QAAC,YAAY;QAAC,OAAO,EAAEA;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;EAClC;IAAA;IAAA;IAAA;EAAA,QAEL;AAEd,CAAC;AAAA,GAzBKL,QAAQ;EAAA,QACIJ,QAAQ,EAMlBJ,QAAQ;AAAA;AAAA,KAPVQ,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
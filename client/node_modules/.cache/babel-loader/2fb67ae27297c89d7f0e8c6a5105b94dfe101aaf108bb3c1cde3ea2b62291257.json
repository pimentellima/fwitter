{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\profile\\\\profilePage.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport moment from \"moment\";\nimport { useEffect } from \"react\";\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\";\nimport { getUserPostsById } from \"../../services/postsService\";\nimport { getUserByUsername } from \"../../services/userService\";\nimport Post from \"../post/post\";\nimport Profile from \"./profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const location = useLocation();\n  const username = location.pathname.slice(1);\n  const navigate = useNavigate();\n  const {\n    data: user,\n    isFetched: isFetchedUser\n  } = useQuery(['profileUser', {\n    username\n  }], () => getUserByUsername(username));\n  const {\n    data: posts,\n    isFetched: isFetchedPosts\n  } = useQuery(['profilePosts'], () => getUserPostsById(user.id).then(data => data.map(post => ({\n    ...post,\n    ingredients: JSON.parse(post.ingredients),\n    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n  }))), {\n    enabled: isFetchedUser\n  });\n  const handlePostClick = post => {\n    navigate('/post/' + post.id);\n  };\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isFetchedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky top-0 border-b border-stone-700 \\r pt-2 pb-4 pl-3 font-medium text-xl \\r z-20 bg-stone-800\",\n      children: user && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), isFetchedPosts && posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handlePostClick(post),\n      className: \"border-b border-stone-700\",\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        postObj: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n_s(ProfilePage, \"GfCrZ+FHyX83ouzQudMKP25Bzzs=\", false, function () {\n  return [useLocation, useNavigate, useQuery, useQuery];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["useQuery","moment","useEffect","Navigate","useLocation","useNavigate","getUserPostsById","getUserByUsername","Post","Profile","ProfilePage","location","username","pathname","slice","navigate","data","user","isFetched","isFetchedUser","posts","isFetchedPosts","id","then","map","post","ingredients","JSON","parse","date","format","enabled","handlePostClick","window","scroll","name"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/profile/profilePage.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { getUserPostsById } from \"../../services/postsService\";\r\nimport { getUserByUsername } from \"../../services/userService\";\r\nimport Post from \"../post/post\";\r\nimport Profile from \"./profile\";\r\n\r\nconst ProfilePage = () => {\r\n    const location = useLocation();\r\n    const username = location.pathname.slice(1);\r\n    const navigate = useNavigate();\r\n\r\n    const { \r\n        data: user, \r\n        isFetched: isFetchedUser \r\n    } = useQuery(['profileUser', { username }], () => \r\n    getUserByUsername(username));\r\n\r\n\r\n    const { \r\n        data: posts,  \r\n        isFetched: isFetchedPosts\r\n    } = useQuery(['profilePosts'], () => \r\n            getUserPostsById(user.id).then(data => \r\n                data.map(post => ({\r\n                    ...post, \r\n                    ingredients: JSON.parse(post.ingredients),\r\n                    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n                }))\r\n            ), \r\n        {\r\n            enabled: isFetchedUser\r\n        });\r\n\r\n    const handlePostClick = (post) => {\r\n        navigate('/post/' + post.id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0);\r\n    }, [])\r\n\r\n    return ( \r\n        <> \r\n            {isFetchedUser && \r\n                <div className='sticky top-0 border-b border-stone-700 \r\n                            pt-2 pb-4 pl-3 font-medium text-xl \r\n                            z-20 bg-stone-800'>\r\n                    {user && <p>{user.name}</p>}\r\n                </div> \r\n            }\r\n            <Profile/>            \r\n            {isFetchedPosts && posts.map(post => \r\n                <div \r\n                    onClick={() => handlePostClick(post)} \r\n                    className='border-b border-stone-700'\r\n                    key={post.id}\r\n                    >\r\n                    <Post postObj={post}/>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfilePage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACrE,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAAC;AAAA;AAEhC,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,QAAQ,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAE9B,MAAM;IACFW,IAAI,EAAEC,IAAI;IACVC,SAAS,EAAEC;EACf,CAAC,GAAGnB,QAAQ,CAAC,CAAC,aAAa,EAAE;IAAEY;EAAS,CAAC,CAAC,EAAE,MAC5CL,iBAAiB,CAACK,QAAQ,CAAC,CAAC;EAG5B,MAAM;IACFI,IAAI,EAAEI,KAAK;IACXF,SAAS,EAAEG;EACf,CAAC,GAAGrB,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,MACvBM,gBAAgB,CAACW,IAAI,CAACK,EAAE,CAAC,CAACC,IAAI,CAACP,IAAI,IAC/BA,IAAI,CAACQ,GAAG,CAACC,IAAI,KAAK;IACd,GAAGA,IAAI;IACPC,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACC,WAAW,CAAC;IACzCG,IAAI,EAAE5B,MAAM,CAACwB,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;EACxD,CAAC,CAAC,CAAC,CACN,EACL;IACIC,OAAO,EAAEZ;EACb,CAAC,CAAC;EAEN,MAAMa,eAAe,GAAIP,IAAI,IAAK;IAC9BV,QAAQ,CAAC,QAAQ,GAAGU,IAAI,CAACH,EAAE,CAAC;EAChC,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZ+B,MAAM,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,WACKf,aAAa,iBACV;MAAK,SAAS,EAAC,mGAEe;MAAA,UACzBF,IAAI,iBAAI;QAAA,UAAIA,IAAI,CAACkB;MAAI;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACzB,eAEV,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAE,EACTd,cAAc,IAAID,KAAK,CAACI,GAAG,CAACC,IAAI,iBAC7B;MACI,OAAO,EAAE,MAAMO,eAAe,CAACP,IAAI,CAAE;MACrC,SAAS,EAAC,2BAA2B;MAAA,uBAGrC,QAAC,IAAI;QAAC,OAAO,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA;IAAE,GAFjBA,IAAI,CAACH,EAAE;MAAA;MAAA;MAAA;IAAA,QAGV,CACT;EAAA,gBACF;AAEX,CAAC;AAAA,GAxDKZ,WAAW;EAAA,QACIN,WAAW,EAEXC,WAAW,EAKxBL,QAAQ,EAORA,QAAQ;AAAA;AAAA,KAfVU,WAAW;AA2DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
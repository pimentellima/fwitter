{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\post\\\\postActions.js\",\n  _s = $RefreshSig$();\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext, useEffect, useState } from \"react\";\nimport CommentButton from \"../../components/button/commentButton\";\nimport LikeButton from \"../../components/button/likeButton\";\nimport SaveButton from \"../../components/button/saveButton\";\nimport ShareButton from \"../../components/button/shareButton\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { createLike, createShare, deleteLike, getBookmarks, getComments, getLikes, getShares } from \"../../services/postsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostActions = _ref => {\n  _s();\n  let {\n    post_id,\n    openCommentPopup\n  } = _ref;\n  const [liked, setLiked] = useState(false);\n  const [shared, setShared] = useState(false);\n  const [bookmarked, setBookmarked] = useState(false);\n  const queryClient = useQueryClient();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data: likes,\n    isFetched: isFetchedLikes\n  } = useQuery(['postLike', {\n    post_id\n  }], () => getLikes(post_id));\n  const {\n    data: comments,\n    isFetched: isFetchedComments\n  } = useQuery(['postComments', {\n    post_id\n  }], () => getComments(post_id));\n  const {\n    data: bookmarks,\n    isFetched: isFetchedBookmarks\n  } = useQuery(['postBookmarks', {\n    post_id\n  }], () => getBookmarks(post_id));\n  const {\n    data: shares,\n    isFetched: isFetchedShares\n  } = useQuery(['postShares', {\n    post_id\n  }], () => getShares(post_id));\n  useEffect(() => {\n    if (shares) {\n      setShared(!!shares.filter(share => share.user_id === currentUser.id).length);\n    }\n  }, [shares]);\n  useEffect(() => {\n    if (likes) {\n      setLiked(!!likes.filter(like => like.user_id === currentUser.id).length);\n    }\n  }, [likes]);\n  useEffect(() => {\n    if (bookmarks) {\n      setLiked(!!bookmarks.filter(bookmark => bookmark.user_id === currentUser.id).length);\n    }\n  }, [bookmarks]);\n  const likeMutation = useMutation(() => createLike({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id\n    }])\n  });\n  const deleteLikeMutation = useMutation(() => deleteLike({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postLike', {\n      post_id\n    }])\n  });\n  const shareMutation = useMutation(() => createShare({\n    post_id,\n    user_id: currentUser.id\n  }), {\n    onSuccess: () => queryClient.invalidateQueries(['postShares', {\n      post_id\n    }])\n  });\n  const handleShare = e => {\n    e.stopPropagation();\n    if (!shared) shareMutation.mutate();\n  };\n  const handleLike = e => {\n    e.stopPropagation();\n    liked ? deleteLikeMutation.mutate() : likeMutation.mutate();\n  };\n  const handleComment = e => {\n    e.stopPropagation();\n    openCommentPopup();\n  };\n  const handleBookmar = e => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row items-center justify-between h-14\",\n    children: [/*#__PURE__*/_jsxDEV(CommentButton, {\n      onClick: e => handleComment(e),\n      comments: isFetchedComments ? comments.length : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ShareButton, {\n      onClick: e => handleShare(e),\n      shares: isFetchedShares ? shares.length : '',\n      active: shared,\n      color: \"green-400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LikeButton, {\n      onClick: e => handleLike(e),\n      active: liked,\n      likes: isFetchedLikes ? likes.length : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n      onClick: () => {},\n      active: false,\n      color: \"amber-600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(PostActions, \"YDMcmM9p2EZYUmNZnQ41PN/IwfU=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useQuery, useQuery, useMutation, useMutation, useMutation];\n});\n_c = PostActions;\nexport default PostActions;\nvar _c;\n$RefreshReg$(_c, \"PostActions\");","map":{"version":3,"names":["useMutation","useQuery","useQueryClient","useContext","useEffect","useState","CommentButton","LikeButton","SaveButton","ShareButton","AuthContext","createLike","createShare","deleteLike","getBookmarks","getComments","getLikes","getShares","PostActions","post_id","openCommentPopup","liked","setLiked","shared","setShared","bookmarked","setBookmarked","queryClient","currentUser","data","likes","isFetched","isFetchedLikes","comments","isFetchedComments","bookmarks","isFetchedBookmarks","shares","isFetchedShares","filter","share","user_id","id","length","like","bookmark","likeMutation","onSuccess","invalidateQueries","deleteLikeMutation","shareMutation","handleShare","e","stopPropagation","mutate","handleLike","handleComment","handleBookmar"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/postActions.js"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport CommentButton from \"../../components/button/commentButton\";\r\nimport LikeButton from \"../../components/button/likeButton\";\r\nimport SaveButton from \"../../components/button/saveButton\";\r\nimport ShareButton from \"../../components/button/shareButton\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport { \r\n    createLike, \r\n    createShare, \r\n    deleteLike, \r\n    getBookmarks, \r\n    getComments, \r\n    getLikes, \r\n    getShares \r\n} from \"../../services/postsService\";\r\n\r\nconst PostActions = ({ post_id, openCommentPopup }) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [shared, setShared] = useState(false);\r\n    const [bookmarked, setBookmarked] = useState(false);\r\n    const queryClient = useQueryClient();\r\n    const { currentUser } = useContext(AuthContext);\r\n                \r\n    const { data: likes, isFetched: isFetchedLikes } = useQuery(\r\n        ['postLike', { post_id }], () => getLikes(post_id)\r\n        )\r\n\r\n    const { data: comments, isFetched: isFetchedComments } = useQuery(\r\n        ['postComments', { post_id }], () => getComments(post_id)\r\n        )\r\n\r\n    const { data: bookmarks, isFetched: isFetchedBookmarks } = useQuery(\r\n        ['postBookmarks', { post_id }], () => getBookmarks(post_id)\r\n        )\r\n\r\n    const { data: shares, isFetched: isFetchedShares } = useQuery(\r\n        ['postShares', { post_id }], () => getShares(post_id)\r\n        )\r\n\r\n    useEffect(() => {    \r\n        if(shares) {\r\n            setShared(!!shares\r\n                .filter(share =>\r\n                    share.user_id === currentUser.id).length)\r\n        }\r\n    }, [shares])\r\n\r\n    useEffect(() => {\r\n        if(likes) {\r\n            setLiked(!!likes\r\n                .filter(like => \r\n                    like.user_id === currentUser.id).length)\r\n        }\r\n    }, [likes])\r\n\r\n    useEffect(() => {\r\n        if(bookmarks) {\r\n            setLiked(!!bookmarks\r\n                .filter(bookmark => \r\n                    bookmark.user_id === currentUser.id).length)\r\n        }\r\n    }, [bookmarks])\r\n\r\n    const likeMutation = useMutation(\r\n        () => createLike({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postLike', { post_id }])\r\n        }\r\n    )\r\n\r\n    const deleteLikeMutation = useMutation(() => \r\n        deleteLike({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postLike', { post_id }])\r\n        }\r\n    )\r\n\r\n    const shareMutation = useMutation(() => \r\n        createShare({ post_id, user_id: currentUser.id }), {\r\n            onSuccess: () => \r\n                queryClient.invalidateQueries(['postShares', { post_id }])\r\n        }\r\n    )\r\n\r\n    const handleShare = e => {\r\n        e.stopPropagation();\r\n        if(!shared) shareMutation.mutate();\r\n    }\r\n                                            \r\n    const handleLike = e => {\r\n        e.stopPropagation();\r\n        liked ? deleteLikeMutation.mutate() : likeMutation.mutate();\r\n    }\r\n\r\n    const handleComment = e => {\r\n        e.stopPropagation();\r\n        openCommentPopup();\r\n    }\r\n\r\n    const handleBookmar = e => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-row items-center justify-between h-14\">\r\n            <CommentButton \r\n                onClick={e => handleComment(e)}\r\n                comments={isFetchedComments ? comments.length : ''}\r\n                />\r\n            <ShareButton \r\n                onClick={(e) => handleShare(e)} \r\n                shares={isFetchedShares ? shares.length : ''} \r\n                active={shared}\r\n                color='green-400'\r\n                />\r\n            <LikeButton \r\n                onClick={(e) => handleLike(e)} \r\n                active={liked}\r\n                likes={isFetchedLikes ? likes.length : ''} \r\n                />\r\n            <SaveButton \r\n                onClick={() => {}}\r\n                active={false}\r\n                color='amber-600'\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostActions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
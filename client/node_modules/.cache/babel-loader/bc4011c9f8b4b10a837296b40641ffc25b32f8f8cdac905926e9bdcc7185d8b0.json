{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\feed\\\\profileFeed.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Post from \"../containers/post/post\";\nimport { getUserPostsById } from \"../services/postsService\";\nimport { getUserByUsername } from \"../services/userService\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileFeed = () => {\n  _s();\n  const location = useLocation();\n  const username = location.pathname.slice(1);\n  const navigate = useNavigate();\n  const {\n    data: user,\n    isFetched: isFetchedUser\n  } = useQuery(['profileUser', {\n    username\n  }], () => getUserByUsername(username));\n  const {\n    data: posts,\n    isFetched: isFetchedPosts\n  } = useQuery(['profilePosts'], () => getUserPostsById(user.id), {\n    enabled: isFetchedUser\n  });\n  const handlePostClick = post => {\n    navigate('/post/' + post.id);\n  };\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, []);\n  if (!isFetchedPosts) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isFetchedPosts && posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handlePostClick(post),\n      className: \"border-b border-stone-700\",\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(ProfileFeed, \"GfCrZ+FHyX83ouzQudMKP25Bzzs=\", false, function () {\n  return [useLocation, useNavigate, useQuery, useQuery];\n});\n_c = ProfileFeed;\nexport default ProfileFeed;\nvar _c;\n$RefreshReg$(_c, \"ProfileFeed\");","map":{"version":3,"names":["useQuery","useEffect","useLocation","useNavigate","Post","getUserPostsById","getUserByUsername","ProfileFeed","location","username","pathname","slice","navigate","data","user","isFetched","isFetchedUser","posts","isFetchedPosts","id","enabled","handlePostClick","post","window","scroll","map"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/feed/profileFeed.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Post from \"../containers/post/post\";\r\nimport { getUserPostsById } from \"../services/postsService\";\r\nimport { getUserByUsername } from \"../services/userService\";\r\n\r\nconst ProfileFeed = () => {\r\n    const location = useLocation();\r\n    const username = location.pathname.slice(1);\r\n    const navigate = useNavigate();\r\n\r\n    const { \r\n        data: user, \r\n        isFetched: isFetchedUser \r\n    } = useQuery(['profileUser', { username }], () => \r\n    getUserByUsername(username));\r\n\r\n    const { \r\n        data: posts,  \r\n        isFetched: isFetchedPosts\r\n    } = useQuery(['profilePosts'], () => \r\n            getUserPostsById(user.id), {\r\n                enabled: isFetchedUser\r\n            });\r\n\r\n    const handlePostClick = (post) => {\r\n        navigate('/post/' + post.id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0);\r\n    }, [])\r\n\r\n    if(!isFetchedPosts) return <></>\r\n\r\n    return ( \r\n        <> \r\n            {isFetchedPosts && posts.map(post => \r\n                <div \r\n                    onClick={() => handlePostClick(post)} \r\n                    className='border-b border-stone-700'\r\n                    key={post.id}\r\n                    >\r\n                    <Post post={post}/>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileFeed;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,iBAAiB,QAAQ,yBAAyB;AAAC;AAAA;AAE5D,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,QAAQ,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAE9B,MAAM;IACFU,IAAI,EAAEC,IAAI;IACVC,SAAS,EAAEC;EACf,CAAC,GAAGhB,QAAQ,CAAC,CAAC,aAAa,EAAE;IAAES;EAAS,CAAC,CAAC,EAAE,MAC5CH,iBAAiB,CAACG,QAAQ,CAAC,CAAC;EAE5B,MAAM;IACFI,IAAI,EAAEI,KAAK;IACXF,SAAS,EAAEG;EACf,CAAC,GAAGlB,QAAQ,CAAC,CAAC,cAAc,CAAC,EAAE,MACvBK,gBAAgB,CAACS,IAAI,CAACK,EAAE,CAAC,EAAE;IACvBC,OAAO,EAAEJ;EACb,CAAC,CAAC;EAEV,MAAMK,eAAe,GAAIC,IAAI,IAAK;IAC9BV,QAAQ,CAAC,QAAQ,GAAGU,IAAI,CAACH,EAAE,CAAC;EAChC,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZsB,MAAM,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAG,CAACN,cAAc,EAAE,oBAAO,qCAAK;EAEhC,oBACI;IAAA,UACKA,cAAc,IAAID,KAAK,CAACQ,GAAG,CAACH,IAAI,iBAC7B;MACI,OAAO,EAAE,MAAMD,eAAe,CAACC,IAAI,CAAE;MACrC,SAAS,EAAC,2BAA2B;MAAA,uBAGrC,QAAC,IAAI;QAAC,IAAI,EAAEA;MAAK;QAAA;QAAA;QAAA;MAAA;IAAE,GAFdA,IAAI,CAACH,EAAE;MAAA;MAAA;MAAA;IAAA,QAGV;EACT,iBACF;AAEX,CAAC;AAAA,GA1CKZ,WAAW;EAAA,QACIL,WAAW,EAEXC,WAAW,EAKxBH,QAAQ,EAMRA,QAAQ;AAAA;AAAA,KAdVO,WAAW;AA4CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
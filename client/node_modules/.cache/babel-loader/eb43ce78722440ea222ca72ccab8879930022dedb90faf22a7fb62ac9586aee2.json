{"ast":null,"code":"var _s = $RefreshSig$();\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { useGetPostByIdQuery } from \"../../hooks/useGetPostByIdQuery\";\nimport { request } from \"../../utils/axios\";\nexport const useGetPostThread = async id => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const {\n    data: post\n  } = useGetPostByIdQuery({\n    id\n  });\n  const fetchPost = async id => request.get('/single', {\n    params: {\n      id\n    }\n  }).then(res => {\n    const post = res.data[0];\n    return {\n      ...post,\n      ingredients: JSON.parse(post.ingredients),\n      date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n    };\n  });\n  useEffect(() => {\n    if (!posts && post.parent_id) {\n      const parentPost = fetchPost(post.parent_id);\n      setPosts(posts => [...posts, parentPost]);\n    } else {\n      const post = posts[posts.length - 1];\n      if (post.parent_id) {\n        const parentPost = fetchPost(id);\n        setPosts(posts => [...posts, parentPost]);\n      }\n    }\n  }, [posts]);\n  return posts;\n};\n_s(useGetPostThread, \"bRGIJPLST45yp2Cj2zyGNCXyB0U=\", false, function () {\n  return [useGetPostByIdQuery];\n});","map":{"version":3,"names":["moment","useEffect","useState","useGetPostByIdQuery","request","useGetPostThread","id","posts","setPosts","data","post","fetchPost","get","params","then","res","ingredients","JSON","parse","date","format","parent_id","parentPost","length"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/postPage/useGetPostThread.js"],"sourcesContent":["import moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useGetPostByIdQuery } from \"../../hooks/useGetPostByIdQuery\";\r\nimport { request } from \"../../utils/axios\";\r\n\r\nexport const useGetPostThread = async id => {\r\n    const [posts, setPosts] = useState([]);\r\n    const { data: post } = useGetPostByIdQuery({ id });\r\n\r\n    const fetchPost = async id => \r\n        request.get('/single', {\r\n            params: { id }\r\n            }).then(res => {\r\n                const post = res.data[0];\r\n                return {\r\n                    ...post, \r\n                    ingredients: JSON.parse(post.ingredients),\r\n                    date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n                }\r\n            })\r\n\r\n\r\n    useEffect(() => {\r\n        if(!posts && post.parent_id) {\r\n            const parentPost = fetchPost(post.parent_id);\r\n            setPosts(posts => [...posts, parentPost]);\r\n        }\r\n        else {\r\n            const post = posts[posts.length - 1];\r\n            if(post.parent_id) {\r\n                const parentPost = fetchPost(id);\r\n                setPosts(posts => [...posts, parentPost]);\r\n            }\r\n        }\r\n\r\n    }, [posts])\r\n\r\n    return posts;\r\n}\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,iCAAiC;AACrE,SAASC,OAAO,QAAQ,mBAAmB;AAE3C,OAAO,MAAMC,gBAAgB,GAAG,MAAMC,EAAE,IAAI;EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEO,IAAI,EAAEC;EAAK,CAAC,GAAGP,mBAAmB,CAAC;IAAEG;EAAG,CAAC,CAAC;EAElD,MAAMK,SAAS,GAAG,MAAML,EAAE,IACtBF,OAAO,CAACQ,GAAG,CAAC,SAAS,EAAE;IACnBC,MAAM,EAAE;MAAEP;IAAG;EACb,CAAC,CAAC,CAACQ,IAAI,CAACC,GAAG,IAAI;IACX,MAAML,IAAI,GAAGK,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC;IACxB,OAAO;MACH,GAAGC,IAAI;MACPM,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACR,IAAI,CAACM,WAAW,CAAC;MACzCG,IAAI,EAAEnB,MAAM,CAACU,IAAI,CAACS,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;IACxD,CAAC;EACL,CAAC,CAAC;EAGVnB,SAAS,CAAC,MAAM;IACZ,IAAG,CAACM,KAAK,IAAIG,IAAI,CAACW,SAAS,EAAE;MACzB,MAAMC,UAAU,GAAGX,SAAS,CAACD,IAAI,CAACW,SAAS,CAAC;MAC5Cb,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAEe,UAAU,CAAC,CAAC;IAC7C,CAAC,MACI;MACD,MAAMZ,IAAI,GAAGH,KAAK,CAACA,KAAK,CAACgB,MAAM,GAAG,CAAC,CAAC;MACpC,IAAGb,IAAI,CAACW,SAAS,EAAE;QACf,MAAMC,UAAU,GAAGX,SAAS,CAACL,EAAE,CAAC;QAChCE,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAEe,UAAU,CAAC,CAAC;MAC7C;IACJ;EAEJ,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,OAAOA,KAAK;AAChB,CAAC;AAAA,GAjCYF,gBAAgB;EAAA,QAEFF,mBAAmB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
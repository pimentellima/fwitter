{"ast":null,"code":"import moment from \"moment\";\nimport { request } from \"../utils/request\";\nexport const uploadImg = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  const res = await request.post('/upload/post/', formData);\n  return res.data;\n};\nexport const createPost = async (data, user_id) => {\n  const {\n    title,\n    description,\n    ingredients,\n    file\n  } = data;\n  const fileUrl = file[0] ? await uploadImg(file[0]) : '';\n  const postObj = {\n    user_id,\n    title,\n    description,\n    ingredients: JSON.stringify(ingredients),\n    date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n    file: fileUrl\n  };\n  return await request.post('/posts/', postObj);\n};\nexport const getUserPostsById = async id => {\n  const res = await request.get('/posts/' + id);\n  return res.data;\n};\nexport const getPostsById = async id => request.get('/posts/', {\n  params: {\n    id\n  }\n}).then(res => res.data.map(post => ({\n  ...post,\n  ingredients: JSON.parse(post.ingredients),\n  date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\n})));","map":{"version":3,"names":["moment","request","uploadImg","file","formData","FormData","append","res","post","data","createPost","user_id","title","description","ingredients","fileUrl","postObj","JSON","stringify","date","format","getUserPostsById","id","get","getPostsById","params","then","map","parse"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/services/postsService.js"],"sourcesContent":["import moment from \"moment\";\r\nimport { request } from \"../utils/request\";\r\n\r\nexport const uploadImg = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const res = await request.post('/upload/post/', formData);\r\n    return res.data;\r\n}\r\n\r\nexport const createPost = async (data, user_id) => {\r\n    const { title, description, ingredients, file } = data;\r\n    const fileUrl = file[0] ? await uploadImg(file[0]) : '';\r\n    const postObj = {\r\n        user_id,\r\n        title,\r\n        description,\r\n        ingredients: JSON.stringify(ingredients),\r\n        date: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n        file: fileUrl\r\n    }\r\n    return await request.post('/posts/', postObj);\r\n}\r\n\r\n\r\n\r\nexport const getUserPostsById = async(id) => {\r\n    const res = await request.get('/posts/' + id);\r\n    return res.data;\r\n}\r\n\r\nexport const getPostsById = async(id) => \r\n    request.get('/posts/', {\r\n        params: {\r\n            id\r\n        }\r\n    }).then(res => res.data.map(post => ({\r\n            ...post, \r\n            ingredients: JSON.parse(post.ingredients),\r\n            date: moment(post.date).format('YYYY-MM-DD HH:mm:ss')\r\n    })\r\n))\r\n\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,OAAO,MAAMC,SAAS,GAAG,MAAOC,IAAI,IAAK;EACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7B,MAAMI,GAAG,GAAG,MAAMN,OAAO,CAACO,IAAI,CAAC,eAAe,EAAEJ,QAAQ,CAAC;EACzD,OAAOG,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,OAAOD,IAAI,EAAEE,OAAO,KAAK;EAC/C,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,WAAW;IAAEX;EAAK,CAAC,GAAGM,IAAI;EACtD,MAAMM,OAAO,GAAGZ,IAAI,CAAC,CAAC,CAAC,GAAG,MAAMD,SAAS,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;EACvD,MAAMa,OAAO,GAAG;IACZL,OAAO;IACPC,KAAK;IACLC,WAAW;IACXC,WAAW,EAAEG,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC;IACxCK,IAAI,EAAEnB,MAAM,EAAE,CAACoB,MAAM,CAAC,qBAAqB,CAAC;IAC5CjB,IAAI,EAAEY;EACV,CAAC;EACD,OAAO,MAAMd,OAAO,CAACO,IAAI,CAAC,SAAS,EAAEQ,OAAO,CAAC;AACjD,CAAC;AAID,OAAO,MAAMK,gBAAgB,GAAG,MAAMC,EAAE,IAAK;EACzC,MAAMf,GAAG,GAAG,MAAMN,OAAO,CAACsB,GAAG,CAAC,SAAS,GAAGD,EAAE,CAAC;EAC7C,OAAOf,GAAG,CAACE,IAAI;AACnB,CAAC;AAED,OAAO,MAAMe,YAAY,GAAG,MAAMF,EAAE,IAChCrB,OAAO,CAACsB,GAAG,CAAC,SAAS,EAAE;EACnBE,MAAM,EAAE;IACJH;EACJ;AACJ,CAAC,CAAC,CAACI,IAAI,CAACnB,GAAG,IAAIA,GAAG,CAACE,IAAI,CAACkB,GAAG,CAACnB,IAAI,KAAK;EAC7B,GAAGA,IAAI;EACPM,WAAW,EAAEG,IAAI,CAACW,KAAK,CAACpB,IAAI,CAACM,WAAW,CAAC;EACzCK,IAAI,EAAEnB,MAAM,CAACQ,IAAI,CAACW,IAAI,CAAC,CAACC,MAAM,CAAC,qBAAqB;AAC5D,CAAC,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Documentos\\\\vsc\\\\fwitter\\\\client\\\\src\\\\containers\\\\post\\\\viewPost.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport 'moment/locale/pt-br';\nimport { useEffect, useRef } from \"react\";\nimport { Navigate, useMatch, useNavigate } from \"react-router-dom\";\nimport { getComments, getPostById } from \"../../services/postsService\";\nimport { getUserById } from \"../../services/userService\";\nimport { getPostThread } from '../../utils/getPostThread';\nimport WriteComment from \"../write/writeComment\";\nimport Post from \"./post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewPost = () => {\n  _s();\n  const match = useMatch(\"/post/:id\");\n  const id = match.params.id;\n  const navigate = useNavigate();\n  const postRef = useRef();\n  const {\n    data: postObj,\n    isFetched: isFetchedPost\n  } = useQuery(['post', {\n    id\n  }], () => getPostById(id));\n  const {\n    data: user,\n    isFetched: isFetchedUser\n  } = useQuery(['postUser', {\n    id: postObj === null || postObj === void 0 ? void 0 : postObj.user_id\n  }], () => getUserById(postObj.user_id), {\n    enabled: !!postObj\n  });\n  const {\n    data: postThread,\n    isFetched: isFetchedThread\n  } = useQuery(['postThread', {\n    id\n  }], () => getPostThread(id));\n  const {\n    data: commentPosts,\n    isFetched: isFetchedComments\n  } = useQuery(['postComments', {\n    parent_id: postObj === null || postObj === void 0 ? void 0 : postObj.id\n  }], () => getComments(postObj.id), {\n    enabled: isFetchedPost\n  });\n  const handlePostClick = post => {\n    navigate('/post/' + post.id);\n  };\n  const renderThread = () => postThread.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => handlePostClick(post),\n    className: `hover:backdrop-brightness-110 hover:cursor-pointer `,\n    children: /*#__PURE__*/_jsxDEV(Post, {\n      type: \"thread\",\n      postObj: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, post.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this));\n  const renderComments = () => commentPosts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => handlePostClick(post),\n    className: \"hover:backdrop-brightness-110 hover:cursor-pointer \\r border-b border-stone-700\",\n    children: /*#__PURE__*/_jsxDEV(Post, {\n      postObj: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, post.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this));\n  const isFetched = isFetchedThread && isFetchedPost && isFetchedComments && isFetchedUser;\n  const scroll = () => {\n    if (postThread.length == 0) window.scroll(0, 0);else {\n      postRef.current.scrollIntoView({\n        block: 'start'\n      });\n      window.scrollBy({\n        top: -60\n      });\n    }\n  };\n  useEffect(() => {\n    if (isFetched) scroll();\n  }, [id, isFetched]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sticky top-0 border-b border-stone-700 \\r pt-2 pb-4 pl-3 font-medium text-xl \\r z-20 bg-stone-800\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Fweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), isFetched && renderThread(), isFetched && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: postRef,\n      className: \"[&_>*]:border-b \\r [&_>*]:border-stone-700\",\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        postObj: postObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(WriteComment, {\n        user: user,\n        post: postObj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), isFetched && renderComments()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewPost, \"gowLB7GramTwkfKCA7gCIHpzFjw=\", false, function () {\n  return [useMatch, useNavigate, useQuery, useQuery, useQuery, useQuery];\n});\n_c = ViewPost;\nexport default ViewPost;\nvar _c;\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"names":["useQuery","useEffect","useRef","Navigate","useMatch","useNavigate","getComments","getPostById","getUserById","getPostThread","WriteComment","Post","ViewPost","match","id","params","navigate","postRef","data","postObj","isFetched","isFetchedPost","user","isFetchedUser","user_id","enabled","postThread","isFetchedThread","commentPosts","isFetchedComments","parent_id","handlePostClick","post","renderThread","map","index","renderComments","scroll","length","window","current","scrollIntoView","block","scrollBy","top"],"sources":["C:/Users/mathe/OneDrive/Documentos/vsc/fwitter/client/src/containers/post/viewPost.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport 'moment/locale/pt-br';\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Navigate, useMatch, useNavigate } from \"react-router-dom\";\r\nimport { getComments, getPostById } from \"../../services/postsService\";\r\nimport { getUserById } from \"../../services/userService\";\r\nimport { getPostThread } from '../../utils/getPostThread';\r\nimport WriteComment from \"../write/writeComment\";\r\nimport Post from \"./post\";\r\n\r\nconst ViewPost = () => {\r\n    const match = useMatch(\"/post/:id\");\r\n    const id = match.params.id;\r\n    const navigate = useNavigate();\r\n    const postRef = useRef();\r\n\r\n    const { \r\n        data: postObj, \r\n        isFetched: isFetchedPost \r\n    } = useQuery(['post', { id }], () => \r\n        getPostById(id)\r\n    )\r\n\r\n    const { data: user, isFetched: isFetchedUser } = useQuery(\r\n        ['postUser', { id: postObj?.user_id }], () => \r\n            getUserById(postObj.user_id), {\r\n                enabled: !!postObj\r\n            }\r\n    );\r\n\r\n    const {\r\n        data: postThread,\r\n        isFetched: isFetchedThread\r\n    } = useQuery(['postThread', { id }], () => getPostThread(id));\r\n    \r\n    const {\r\n        data: commentPosts,\r\n        isFetched: isFetchedComments\r\n    } = useQuery(['postComments', { parent_id: postObj?.id }], () => \r\n        getComments(postObj.id),\r\n        {\r\n            enabled: isFetchedPost\r\n        }\r\n    )\r\n\r\n    const handlePostClick = (post) => {\r\n        navigate('/post/' + post.id)\r\n    }\r\n\r\n    const renderThread = () => postThread.map((post, index) => \r\n        <div \r\n            onClick={() => handlePostClick(post)} \r\n            className={`hover:backdrop-brightness-110 hover:cursor-pointer `}\r\n            key={post.id}\r\n            >\r\n            <Post type='thread' postObj={post}/>\r\n        </div>\r\n    )\r\n\r\n    const renderComments = () => commentPosts.map((post, index) => \r\n        <div \r\n            onClick={() => handlePostClick(post)} \r\n            key={post.id}\r\n            className='hover:backdrop-brightness-110 hover:cursor-pointer \r\n                        border-b border-stone-700'\r\n            >\r\n            <Post postObj={post}/>\r\n        </div>\r\n    )\r\n    \r\n    const isFetched = isFetchedThread && isFetchedPost \r\n                    && isFetchedComments && isFetchedUser;\r\n    \r\n    const scroll = () => {\r\n        if(postThread.length == 0) window.scroll(0,0);\r\n        else {\r\n            postRef.current.scrollIntoView({ block:'start' });\r\n            window.scrollBy({ top: -60 })\r\n        } \r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(isFetched) scroll();\r\n    }, [id, isFetched])\r\n\r\n    return (\r\n        <div> \r\n            <div className='sticky top-0 border-b border-stone-700 \r\n                            pt-2 pb-4 pl-3 font-medium text-xl \r\n                            z-20 bg-stone-800'>\r\n                <p>Fweet</p>\r\n            </div> \r\n            {isFetched && renderThread()}\r\n            {isFetched && \r\n                <div ref={postRef} className=\"[&_>*]:border-b \r\n                                            [&_>*]:border-stone-700\">\r\n                    <Post postObj={postObj}/>\r\n                    <WriteComment user={user} post={postObj}/>\r\n                </div>\r\n            }\r\n            {isFetched && renderComments()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
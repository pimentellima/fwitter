// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  username   String   @unique
  password   String
  createdAt  DateTime? @default(now())

  bookmarks  Bookmark[]
  posts Post[]
  shares  Share[]
  followers Follow[] @relation("Follower")
  following Follow[] @relation("Followed")
  profile Profile?
  likes Like[]
}

model Profile {
  id                      Int     @id @default(autoincrement())
  bio                     String?
  profile_image            String?
  profile_background_image  String?
  author_id                Int     @unique 
  author                  User    @relation(fields: [author_id], references: [id])
}

model Post {
  id          Int     @id @default(autoincrement())
  author_id    Int
  createdAt   DateTime @default(now())
  description String?
  title       String
  ingredients String?
  file        String?

  author      User    @relation(fields: [author_id], references: [id])
  comments    Comment[] @relation("CommentPost")
  comment     Comment?   @relation("Comment")
  bookmarks   Bookmark[]
  shares      Share[]
  likes       Like[]
}

model Comment {
  id            Int @id @default(autoincrement())
  parent_post   Post @relation("CommentPost", fields: [parent_post_id], references: [id])
  parent_post_id Int @unique
  post          Post @relation("Comment", fields: [post_id], references: [id])
  post_id       Int @unique
}

model Bookmark {
  id        Int     @id @default(autoincrement())
  post      Post    @relation(fields: [post_id], references: [id])
  post_id   Int 
  author    User    @relation(fields: [author_id], references: [id])
  author_id  Int
}

model Share {
  id        Int      @id @default(autoincrement())
  post      Post     @relation(fields: [post_id], references: [id])
  post_id   Int 
  author    User     @relation(fields: [author_id], references: [id])
  author_id  Int 
  createdAt DateTime @default(now())
}

model Follow {
  id            Int @id @default(autoincrement())
  followed      User @relation("Followed", fields: [followed_id], references: [id])
  followed_id    Int 
  follower      User @relation("Follower", fields: [follower_id], references: [id])
  follower_id    Int 
}

model Like {
  id        Int    @id @default(autoincrement())
  post      Post   @relation(fields: [post_id], references: [id])
  post_id    Int  @unique
  author    User   @relation(fields: [author_id], references: [id])
  author_id  Int    @unique 
}